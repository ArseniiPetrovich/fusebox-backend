var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.847,1,1.516]],["body/modules/AppModule.html",[0,1.133,1,2.779,2,0.963,3,1.511,4,2.102,5,2.102,6,2.297,7,0.055,8,2.297,9,2.029,10,1.493,11,1.493,12,0.615,13,0.52,14,0.434,15,2.631,16,2.383,17,0.949,18,0.718,19,2.631,20,2.631,21,1.753,22,1.493,23,0.615,24,0.354,25,0.038,26,0.038]],["title/modules/AuthModule.html",[0,0.847,6,1.305]],["body/modules/AuthModule.html",[0,1.156,2,0.992,3,1.542,6,2.318,7,0.054,9,2.071,10,1.538,11,1.538,12,0.633,13,0.536,14,0.447,16,1.806,17,0.964,18,0.74,22,2.071,23,0.633,24,0.365,25,0.038,26,0.038,27,2.165,28,2.165,29,2.318,30,2.711,31,3.65,32,1.538,33,2.711,34,2.711,35,2.711,36,1.806,37,2.165]],["title/classes/CreateUserDto.html",[24,0.36,38,1.305]],["body/classes/CreateUserDto.html",[7,0.054,12,0.58,13,0.491,14,0.41,17,0.803,23,0.58,24,0.463,25,0.036,26,0.036,38,1.679,39,2.485,40,3.401,41,1.985,42,0.787,43,1.951,44,2.238,45,2.628,46,1.667,47,1.667,48,2.258,49,3.151,50,4.47,51,2.238,52,2.485,53,3.945,54,2.485,55,2.485,56,2.485,57,2.485,58,2.485,59,1.985]],["title/modules/DatabaseModule.html",[0,0.847,60,1.305]],["body/modules/DatabaseModule.html",[0,1.305,2,1.195,7,0.054,12,0.762,13,0.645,14,0.538,17,0.962,18,0.891,22,1.851,23,0.762,24,0.439,25,0.043,26,0.043,37,2.607,60,2.012,61,3.264,62,3.008,63,3.264]],["title/injectables/JwtAuthGuard.html",[64,0.978,65,1.516]],["body/injectables/JwtAuthGuard.html",[7,0.054,12,0.774,13,0.655,14,0.546,17,0.971,18,0.904,23,0.774,24,0.446,25,0.044,26,0.044,32,1.879,64,1.522,65,2.359,66,1.879,67,2.207,68,2.646,69,3.312,70,2.207,71,3.312]],["title/injectables/JwtStrategy.html",[29,1.305,64,0.978]],["body/injectables/JwtStrategy.html",[7,0.055,12,0.52,13,0.44,14,0.367,17,1.002,18,0.608,23,0.52,24,0.3,25,0.033,26,0.033,29,1.554,32,1.263,36,1.483,42,0.705,46,0.94,51,1.806,64,1.165,66,1.263,70,1.483,72,1.778,73,2.121,74,3.183,75,2.968,76,2.226,77,3.183,78,2.226,79,1.483,80,1.483,81,3.183,82,2.226,83,2.226,84,2.226,85,1.778,86,3.183,87,1.778,88,1.778,89,2.543,90,2.226,91,2.226,92,2.226,93,2.226,94,2.226,95,2.543,96,2.226,97,2.226,98,2.226,99,2.226,100,2.226,101,2.226,102,2.226,103,2.226,104,2.226,105,2.226,106,2.226,107,2.226,108,2.226,109,2.226,110,3.183,111,1.263]],["title/interfaces/User.html",[112,1.516,113,1.129]],["body/interfaces/User.html",[7,0.053,12,0.641,13,0.543,14,0.452,17,0.641,23,0.641,25,0.039,26,0.039,42,0.869,43,2.088,44,2.517,45,2.956,46,1.874,47,1.754,48,2.446,70,2.452,112,1.557,113,1.555,114,2.744,115,2.192,116,4.152,117,1.828,118,3.317]],["title/controllers/UsersController.html",[119,1.516,120,1.516]],["body/controllers/UsersController.html",[7,0.055,12,0.484,13,0.41,14,0.342,17,0.974,18,0.565,21,1.38,23,0.484,24,0.279,25,0.032,26,0.032,38,2.126,42,0.656,46,1.277,47,1.277,48,1.742,49,2.414,51,1.714,65,1.175,67,1.38,73,2.013,79,2.013,80,2.013,111,1.714,113,0.875,118,1.655,119,1.175,120,1.714,121,1.655,122,2.071,123,2.071,124,2.414,125,2.414,126,1.655,127,2.071,128,2.071,129,2.414,130,1.655,131,2.071,132,2.071,133,2.414,134,3.022,135,2.071,136,2.071,137,1.507,138,1.655,139,1.655,140,1.655,141,2.071,142,2.071,143,2.071,144,2.071,145,3.022,146,2.071,147,2.071,148,2.071,149,2.071]],["title/modules/UsersModule.html",[0,0.847,8,1.305]],["body/modules/UsersModule.html",[0,1.065,2,0.88,3,1.42,7,0.055,8,2.34,9,1.907,10,1.364,11,1.364,12,0.562,13,0.476,14,0.397,16,2.24,17,1.032,18,0.657,21,2.24,22,1.907,23,0.562,24,0.324,25,0.035,26,0.035,60,2.235,120,2.199,137,1.934,138,1.921,150,1.921,151,1.921,152,1.921,153,2.405,154,2.405,155,2.405,156,2.24,157,2.405]],["title/injectables/UsersService.html",[64,0.978,137,1.129]],["body/injectables/UsersService.html",[7,0.055,12,0.421,13,0.357,14,0.298,17,0.919,18,0.493,23,0.421,24,0.243,25,0.029,26,0.029,38,1.922,42,0.572,44,1.024,46,1.389,47,1.389,48,1.606,51,2.079,64,0.999,66,1.024,73,1.817,75,2.179,79,2.191,80,2.191,111,1.866,113,0.762,117,1.202,124,2.179,125,2.179,126,2.179,129,2.627,130,2.179,133,2.179,137,1.152,139,1.441,140,1.441,158,1.441,159,4.531,160,3.665,161,1.804,162,3.665,163,1.804,164,2.728,165,1.804,166,3.307,167,1.804,168,1.804,169,1.441,170,1.804,171,1.804,172,1.804,173,1.804,174,1.804,175,1.441,176,1.804,177,1.202,178,1.804,179,1.804,180,1.804,181,1.804,182,1.804]],["title/coverage.html",[183,2.409]],["body/coverage.html",[7,0.053,14,0.371,24,0.303,25,0.034,26,0.034,29,1.098,38,1.098,40,1.796,41,1.796,47,0.95,62,1.498,64,1.368,65,1.275,67,1.498,68,1.796,72,1.796,112,1.275,113,1.354,115,1.796,119,1.275,120,1.275,121,1.796,137,0.95,156,1.498,158,1.796,177,1.498,183,1.498,184,2.248,185,2.248,186,2.248,187,5.013,188,4.711,189,3.206,190,1.796,191,4.478,192,1.796,193,2.248,194,1.796,195,3.206,196,1.796,197,1.796,198,1.796,199,2.561,200,1.796,201,1.796,202,1.796,203,2.248,204,2.248,205,2.248]],["title/dependencies.html",[3,1.354,206,1.795]],["body/dependencies.html",[3,1.138,7,0.056,18,0.736,24,0.489,25,0.038,26,0.038,32,1.528,36,1.795,59,2.152,85,2.904,87,2.152,88,2.152,89,2.152,117,1.795,207,2.694,208,2.694,209,4.114,210,2.694,211,2.694,212,2.694,213,2.694,214,2.694,215,2.694,216,2.694,217,2.694,218,2.694,219,2.694,220,2.694,221,2.694,222,2.694,223,2.694,224,2.694,225,2.694,226,2.694,227,2.694,228,2.694,229,2.694,230,2.694]],["title/miscellaneous/functions.html",[231,1.275,232,2.56]],["body/miscellaneous/functions.html",[7,0.047,25,0.047,26,0.047,42,1.2,192,3.026,194,3.852,231,2.149,232,3.026,233,3.788]],["title/index.html",[42,0.712,234,2.247,235,2.247]],["body/index.html",[7,0.053,13,0.402,14,0.335,25,0.031,26,0.031,183,1.355,236,2.034,237,2.034,238,2.982,239,2.034,240,2.034,241,2.034,242,2.034,243,2.034,244,2.034,245,1.624,246,1.624,247,1.624,248,1.624,249,1.624,250,2.034,251,3.53,252,2.034,253,2.034,254,2.034,255,2.034,256,4.47,257,2.034,258,2.034,259,2.034,260,2.034,261,2.034,262,2.034,263,2.034,264,2.034,265,2.034,266,2.034,267,2.034,268,2.034,269,2.034,270,2.034,271,2.034,272,4.326,273,2.034,274,2.034,275,2.982,276,2.034,277,2.034,278,2.034,279,2.034,280,2.982,281,2.982,282,2.034,283,2.034,284,2.034,285,2.982,286,2.982,287,2.034,288,2.034,289,2.034,290,2.034,291,2.034,292,1.624,293,2.034,294,2.034,295,2.034,296,2.034,297,2.034,298,2.034,299,2.034,300,2.034,301,2.034,302,2.034,303,1.624,304,2.034,305,2.034,306,2.034,307,2.034,308,2.034,309,2.034,310,1.624]],["title/modules.html",[2,1.324]],["body/modules.html",[1,1.951,2,1.259,6,1.679,7,0.045,8,1.679,25,0.045,26,0.045,60,1.679,292,3.693,311,4.624,312,4.624,313,4.832,314,3.439,315,3.439]],["title/overview.html",[316,2.888]],["body/overview.html",[1,2.688,2,0.986,3,1.536,4,2.152,5,2.152,6,2.245,7,0.051,8,2.365,9,2.062,10,1.528,11,1.528,24,0.363,25,0.038,26,0.038,27,2.152,28,2.152,29,2.009,60,2.009,66,1.528,112,1.528,119,1.528,137,1.738,150,2.152,151,2.152,152,2.152,316,2.152,317,2.694,318,4.114,319,2.694]],["title/properties.html",[43,1.818,206,1.795]],["body/properties.html",[7,0.054,25,0.046,26,0.046,43,2.029,245,2.857,246,2.857,247,2.857,248,2.857,249,2.857,303,2.857,310,2.857,320,3.576,321,3.576,322,3.576]],["title/miscellaneous/variables.html",[231,1.275,323,2.56]],["body/miscellaneous/variables.html",[7,0.056,25,0.029,26,0.029,42,1.047,44,1.032,45,1.212,46,0.768,47,1.821,48,2.028,62,1.828,95,3.317,111,1.032,113,1.555,156,1.828,166,1.453,169,1.453,175,2.192,177,1.212,190,1.453,196,1.453,197,2.64,198,1.453,199,1.453,200,2.192,201,2.192,202,1.453,231,1.032,323,1.453,324,2.744,325,1.819,326,1.819,327,1.819,328,1.819,329,4.153,330,4.153,331,2.744,332,1.819,333,2.744,334,2.744,335,1.819,336,1.819,337,2.744,338,1.819,339,1.819,340,1.819,341,1.819,342,1.819,343,1.819,344,1.819,345,2.744,346,2.744,347,1.819,348,2.744,349,1.819,350,1.819]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":321,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":318,"title":{},"body":{"overview.html":{}}}],["1.1.19",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":319,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":317,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":98,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["6.3.2",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["algorithms",{"_index":108,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["amazing",{"_index":293,"title":{},"body":{"index.html":{}}}],["api",{"_index":249,"title":{},"body":{"index.html":{},"properties.html":{}}}],["app",{"_index":270,"title":{},"body":{"index.html":{}}}],["applications",{"_index":244,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":159,"title":{},"body":{"injectables/UsersService.html":{}}}],["audience",{"_index":104,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth.guard",{"_index":142,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":68,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["auth0_audience=running",{"_index":269,"title":{},"body":{"index.html":{}}}],["auth0_id",{"_index":44,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth0_issuer_url",{"_index":268,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":69,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":71,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":303,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":315,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":248,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":294,"title":{},"body":{"index.html":{}}}],["body",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":194,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":313,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":311,"title":{},"body":{"modules.html":{}}}],["building",{"_index":239,"title":{},"body":{"index.html":{}}}],["cache",{"_index":94,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["charge",{"_index":247,"title":{},"body":{"index.html":{},"properties.html":{}}}],["class",{"_index":24,"title":{"classes/CreateUserDto.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":27,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":28,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":150,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":152,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":151,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":175,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":171,"title":{},"body":{"injectables/UsersService.html":{}}}],["constants.databaseconnectionstring",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants.usermodelstring",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":75,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":144,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(usermodel",{"_index":161,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":119,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('users",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["corresponding",{"_index":263,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":183,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":146,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createduser",{"_index":176,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":179,"title":{},"body":{"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":38,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":63,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database_connection",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnectionstring",{"_index":200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":60,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":62,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":35,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":245,"title":{},"body":{"index.html":{},"properties.html":{}}}],["developed",{"_index":250,"title":{},"body":{"index.html":{}}}],["development",{"_index":271,"title":{},"body":{"index.html":{}}}],["document",{"_index":116,"title":{},"body":{"interfaces/User.html":{}}}],["documentation",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":89,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":90,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto/create",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":282,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":240,"title":{},"body":{"index.html":{}}}],["email",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":265,"title":{},"body":{"index.html":{}}}],["exec",{"_index":182,"title":{},"body":{"injectables/UsersService.html":{}}}],["executioncontext",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["express",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":70,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":83,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":103,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":160,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@user('sub",{"_index":148,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["following",{"_index":261,"title":{},"body":{"index.html":{}}}],["framework",{"_index":238,"title":{},"body":{"index.html":{}}}],["function",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":232,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuse",{"_index":246,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":234,"title":{"index.html":{}},"body":{}}],["graph",{"_index":314,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":289,"title":{},"body":{"index.html":{}}}],["having",{"_index":260,"title":{},"body":{"index.html":{}}}],["here",{"_index":300,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":307,"title":{},"body":{"index.html":{}}}],["id",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":169,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inject(constants.usermodelstring",{"_index":173,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":66,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":255,"title":{},"body":{"index.html":{}}}],["installenvironment",{"_index":257,"title":{},"body":{"index.html":{}}}],["interface",{"_index":112,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":114,"title":{},"body":{"interfaces/User.html":{}}}],["interfaces/user.interface",{"_index":170,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemail",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumberstring",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issuer",{"_index":106,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["join",{"_index":296,"title":{},"body":{"index.html":{}}}],["jwks",{"_index":87,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwksrequestsperminute",{"_index":97,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwksuri",{"_index":99,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt",{"_index":36,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":33,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":65,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":102,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":29,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":304,"title":{},"body":{"index.html":{}}}],["keys",{"_index":262,"title":{},"body":{"index.html":{}}}],["known/jwks.json",{"_index":101,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["license",{"_index":310,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":286,"title":{},"body":{"index.html":{}}}],["make",{"_index":258,"title":{},"body":{"index.html":{}}}],["matching",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":73,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":231,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":285,"title":{},"body":{"index.html":{}}}],["mode",{"_index":275,"title":{},"body":{"index.html":{}}}],["model",{"_index":162,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo_uri",{"_index":267,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":117,"title":{},"body":{"interfaces/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.connect(process.env.mongo_uri",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":299,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":305,"title":{},"body":{"index.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":251,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":309,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":32,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":177,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":237,"title":{},"body":{"index.html":{}}}],["npm",{"_index":256,"title":{},"body":{"index.html":{}}}],["open",{"_index":287,"title":{},"body":{"index.html":{}}}],["optional",{"_index":80,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":316,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":206,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":79,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":85,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportjwtsecret",{"_index":86,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":31,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":34,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":82,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":91,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload",{"_index":81,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":297,"title":{},"body":{"index.html":{}}}],["port",{"_index":266,"title":{},"body":{"index.html":{}}}],["post",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":174,"title":{},"body":{"injectables/UsersService.html":{}}}],["process.env.auth0_audience",{"_index":105,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url",{"_index":107,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url}.well",{"_index":100,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["production",{"_index":277,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":236,"title":{},"body":{"index.html":{}}}],["project",{"_index":288,"title":{},"body":{"index.html":{}}}],["promise",{"_index":166,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":43,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["ratelimit",{"_index":96,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["read",{"_index":298,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":118,"title":{},"body":{"interfaces/User.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":254,"title":{},"body":{"index.html":{}}}],["request",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":111,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["rs256",{"_index":109,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["rsa",{"_index":88,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["run",{"_index":272,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":241,"title":{},"body":{"index.html":{}}}],["secretorkeyprovider",{"_index":93,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":242,"title":{},"body":{"index.html":{}}}],["side",{"_index":243,"title":{},"body":{"index.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":291,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.constants.ts",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.providers.ts",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":30,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/guards/jwt",{"_index":67,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":72,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":76,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:27",{"_index":78,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/database.module",{"_index":155,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/database.module.ts",{"_index":61,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database.providers.ts",{"_index":190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":192,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":115,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/user.decorator.ts",{"_index":198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.constants.ts",{"_index":199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":121,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:13",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:19",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":153,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.providers.ts",{"_index":202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":158,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":165,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":167,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":168,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:8",{"_index":163,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":273,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":276,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":278,"title":{},"body":{"index.html":{}}}],["started",{"_index":235,"title":{"index.html":{}},"body":{}}],["starter",{"_index":253,"title":{},"body":{"index.html":{}}}],["statements",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":301,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":84,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":92,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":292,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":259,"title":{},"body":{"index.html":{}}}],["svg",{"_index":312,"title":{},"body":{"modules.html":{}}}],["table",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":281,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":284,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":283,"title":{},"body":{"index.html":{}}}],["tests",{"_index":280,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":290,"title":{},"body":{"index.html":{}}}],["this.usermodel(createuserdto",{"_index":178,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":180,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":181,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":147,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":149,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":302,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":95,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":308,"title":{},"body":{"index.html":{}}}],["type",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":252,"title":{},"body":{"index.html":{}}}],["unique",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":279,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":110,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":322,"title":{},"body":{"properties.html":{}}}],["usefactory",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":145,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@post",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":113,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user?.[data",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_model",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usermodel",{"_index":164,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodelstring",{"_index":201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.constants",{"_index":172,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":154,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.providers",{"_index":157,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":120,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":8,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":156,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":137,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["util",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validate",{"_index":74,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":77,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":264,"title":{},"body":{"index.html":{}}}],["variable",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":323,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":320,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":274,"title":{},"body":{"index.html":{}}}],["website",{"_index":306,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":295,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [UsersModule, AuthModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n    imports: [PassportModule.register({ defaultStrategy: 'jwt' })],\n    providers: [JwtStrategy],\n    exports: [PassportModule],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth0_id\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth0_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { isNumber } from \"util\";\n\nimport { IsEmail, IsNumberString, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsString()\n    name: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    auth0_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { passportJwtSecret } from 'jwks-rsa';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            secretOrKeyProvider: passportJwtSecret({\n                cache: true,\n                rateLimit: true,\n                jwksRequestsPerMinute: 5,\n                jwksUri: `${process.env.AUTH0_ISSUER_URL}.well-known/jwks.json`,\n            }),\n\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            audience: process.env.AUTH0_AUDIENCE,\n            issuer: `${process.env.AUTH0_ISSUER_URL}`,\n            algorithms: ['RS256'],\n        });\n    }\n\n    validate(payload: unknown): unknown {\n        return payload;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth0_id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth0_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth0_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n    readonly name: string;\n    readonly email: string;\n    readonly auth0_id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './user.decorator';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findOne(@User('sub') id: string) {\n    return this.usersService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { DatabaseModule } from 'src/database.module';\nimport { usersProviders } from './users.providers';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [\n    UsersService,\n    ...usersProviders\n  ]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './interfaces/user.interface';\nimport * as constants from './users.constants';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(constants.userModelString)\n    private userModel: Model,\n  ) { }\n\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const createdUser = new this.userModel(createUserDto);\n    return createdUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return this.userModel.findOne({ auth0_id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.constants.ts\n            \n            variable\n            databaseConnectionString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.constants.ts\n            \n            variable\n            userModelString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.providers.ts\n            \n            variable\n            usersProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.0\n        \n            jwks-rsa : ^2.1.0\n        \n            mongoose : ^6.3.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nFuse Charge Backend API developed with Nest framework TypeScript starter repository.\nInstallation\n$ npm installEnvironment\nMake sure having the following keys and corresponding values in the .env file\nPORT=\nMONGO_URI=\nAUTH0_ISSUER_URL=\nAUTH0_AUDIENCE=Running the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Fuse Charge Backend API\n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseConnectionString   (src/.../users.constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            userModelString   (src/.../users.constants.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            usersProviders   (src/.../users.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConnectionString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATABASE_CONNECTION'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userModelString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_MODEL'\n                    \n                \n\n\n        \n    \n\n    src/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: 'DATABASE_CONNECTION',\n        useFactory: (): Promise =>\n            mongoose.connect(process.env.MONGO_URI),\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/users/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        const user = request.user;\n\n        return data ? user?.[data] : user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    name: { type: String },\n    email: { type: String, required: true, unique: true, index: true },\n    auth0_id: { type: String, required: true, unique: true, index: true },\n})\n                    \n                \n\n\n        \n    \n\n    src/users/users.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: constants.userModelString,\n        useFactory: (connection: Connection) => connection.model('User', UserSchema),\n        inject: [constants.databaseConnectionString],\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

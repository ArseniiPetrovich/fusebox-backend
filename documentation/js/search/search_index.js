var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.085,1,1.961]],["body/modules/AppModule.html",[0,1.555,1,3.805,2,1.409,3,2.054,4,2.775,5,2.775,6,3.213,7,0.035,8,3.213,9,2.626,10,2.514,11,1.895,12,1.895,13,0.372,14,0.321,15,0.273,16,3.346,17,2.811,18,0.59,19,0.668,20,3.346,21,3.346,22,3.346,23,1.409,24,1.895,25,0.372,26,0.182,27,0.025,28,0.025]],["title/controllers/AuthController.html",[29,1.433,30,1.961]],["body/controllers/AuthController.html",[7,0.035,13,0.272,14,0.235,15,0.2,18,0.548,19,0.489,23,1.031,25,0.272,26,0.133,27,0.02,28,0.02,29,1.134,30,2.262,31,2.032,32,1.757,33,2.45,34,0.441,35,1.371,36,2.023,37,2.152,38,2.262,39,2.032,40,3.006,41,1.824,42,2.45,43,1.044,44,2.45,45,3.572,46,1.824,47,2.089,48,3.323,49,1.371,50,0.867,51,0.787,52,1.371,53,1.95,54,1.551,55,1.232,56,2.45,57,2.45,58,1.031,59,2.38,60,3.572,61,3.572,62,1.252,63,3.572,64,1.757,65,1.757,66,1.757,67,1.757,68,1.757,69,2.032,70,2.032,71,1.349,72,1.551,73,1.251,74,2.45,75,1.757,76,2.45,77,1.251,78,1.387,79,2.562,80,2.562,81,2.45,82,2.032,83,1.252,84,2.45,85,2.45,86,2.45,87,1.134,88,1.251,89,2.45,90,2.45]],["title/modules/AuthModule.html",[0,1.085,6,1.753]],["body/modules/AuthModule.html",[0,1.529,2,1.373,3,2.019,6,3.31,7,0.035,9,2.607,10,2.471,11,1.847,12,1.847,13,0.363,14,0.313,15,0.266,17,2.764,18,0.609,19,0.651,23,1.837,24,2.471,25,0.363,26,0.177,27,0.024,28,0.024,30,3.114,91,2.706,92,3.262,93,2.706,94,3.19,95,3.262,96,4.364,97,2.066,98,2.706,99,3.262,100,3.262,101,3.262,102,3.262,103,2.339,104,2.339]],["title/classes/CreateProjectDto.html",[26,0.168,105,1.581]],["body/classes/CreateProjectDto.html",[7,0.035,13,0.366,14,0.316,15,0.268,18,0.366,25,0.366,26,0.238,27,0.025,28,0.025,34,0.592,41,2.69,43,1.54,50,1.199,51,1.161,55,1.711,58,2.079,105,2.24,106,1.863,107,4.553,108,2.359,109,2.031,110,3.542,111,2.797,112,4.918,113,3.289,114,3.289,115,3.289,116,3.289,117,2.083]],["title/classes/CreateUserDto.html",[26,0.168,40,1.753]],["body/classes/CreateUserDto.html",[7,0.034,13,0.387,14,0.334,15,0.284,18,0.387,25,0.387,26,0.247,27,0.026,28,0.026,34,0.626,40,2.58,41,2.593,43,1.484,50,1.232,51,1.119,55,1.676,62,1.78,68,3.864,106,1.971,109,2.108,112,4.638,117,2.204,118,2.887,119,3.642,120,3.481,121,5.078,122,3.481,123,3.481]],["title/modules/DatabaseModule.html",[0,1.085,124,1.581]],["body/modules/DatabaseModule.html",[0,1.791,2,1.756,7,0.035,13,0.464,14,0.401,15,0.34,18,0.568,19,0.833,24,2.363,25,0.464,26,0.226,27,0.029,28,0.029,104,2.992,124,2.609,125,4.172,126,3.961,127,4.172]],["title/guards/IsAccountOwnerGuard.html",[128,1.961,129,1.753]],["body/guards/IsAccountOwnerGuard.html",[7,0.035,13,0.309,14,0.267,15,0.227,18,0.503,19,0.555,25,0.309,26,0.151,27,0.022,28,0.022,34,0.501,35,1.502,37,2.311,43,1.144,47,1.068,49,1.502,50,0.95,51,0.863,52,1.502,53,1.172,55,0.813,59,1.288,62,1.586,71,1.718,77,1.421,83,1.371,87,2.273,88,1.421,129,2.216,130,1.762,131,3.755,132,2.866,133,1.762,134,3.711,135,1.421,136,1.996,137,2.309,138,1.996,139,3.11,140,2.309,141,2.807,142,1.998,143,1.144,144,2.309,145,1.996,146,1.996,147,2.478,148,1.996,149,3.246,150,1.996,151,2.807,152,2.783,153,1.996,154,1.996,155,1.421]],["title/guards/IsCreatorOwnerGuard.html",[128,1.961,156,1.961]],["body/guards/IsCreatorOwnerGuard.html",[7,0.035,13,0.326,14,0.281,15,0.239,18,0.451,19,0.585,25,0.326,26,0.159,27,0.023,28,0.023,34,0.527,35,1.557,37,2.375,43,1.185,49,1.557,50,0.984,51,0.894,52,1.557,53,1.233,62,1.631,71,1.746,72,1.855,77,1.496,83,1.422,87,2.324,88,1.496,111,1.659,130,1.855,133,1.855,134,3.782,135,1.496,136,2.101,138,2.101,139,3.18,141,2.909,142,2.071,143,1.185,146,2.101,147,1.855,148,2.101,150,2.101,151,2.909,153,2.101,154,2.101,155,1.496,156,2.569,157,3.337,158,3.337,159,2.93,160,2.93,161,2.93,162,2.93]],["title/guards/IsProjectOwnerGuard.html",[128,1.961,163,1.961]],["body/guards/IsProjectOwnerGuard.html",[7,0.035,13,0.297,14,0.256,15,0.218,18,0.492,19,0.533,25,0.297,26,0.145,27,0.021,28,0.021,34,0.48,35,1.458,37,2.258,43,1.11,49,1.458,50,0.922,51,0.837,52,1.458,53,1.123,55,0.78,59,1.235,62,1.55,71,1.694,72,1.69,77,1.362,83,1.331,87,2.357,88,1.939,130,1.69,133,1.69,134,3.653,135,1.362,136,1.914,137,2.213,138,1.914,139,3.052,140,2.213,141,2.724,142,1.939,143,1.11,146,1.914,147,2.406,148,1.914,149,3.151,150,1.914,151,2.724,153,1.914,154,1.914,155,1.362,157,3.172,163,2.406,164,2.23,165,2.521,166,1.914,167,1.914,168,2.668,169,2.668]],["title/injectables/JwtAuthGuard.html",[73,1.581,143,0.905]],["body/injectables/JwtAuthGuard.html",[7,0.035,13,0.469,14,0.405,15,0.344,18,0.572,19,0.842,25,0.469,26,0.229,27,0.029,28,0.029,73,2.626,97,2.671,143,1.503,170,2.388,171,2.671,172,3.498,173,4.217,174,2.388,175,4.217]],["title/injectables/JwtStrategy.html",[94,1.753,143,0.905]],["body/injectables/JwtStrategy.html",[7,0.035,13,0.345,14,0.298,15,0.253,18,0.599,19,0.62,25,0.345,26,0.168,27,0.024,28,0.024,34,0.559,35,1.62,43,1.234,49,1.192,50,0.754,52,1.192,64,3.028,83,1.088,94,2.391,97,1.967,103,2.227,135,2.449,143,1.234,155,2.155,170,1.759,174,1.759,176,2.576,177,4.222,178,3.105,179,4.222,180,3.105,181,4.222,182,3.105,183,3.105,184,3.105,185,2.576,186,4.222,187,2.576,188,2.576,189,3.502,190,3.105,191,3.105,192,3.105,193,3.105,194,3.105,195,3.105,196,3.105,197,2.576,198,3.105,199,3.105,200,3.105,201,3.105,202,3.105,203,3.105,204,3.105,205,3.105,206,3.105,207,3.105,208,3.105]],["title/interfaces/Project.html",[164,1.433,209,1.753]],["body/interfaces/Project.html",[7,0.034,13,0.389,14,0.336,15,0.285,18,0.389,25,0.389,27,0.026,28,0.026,34,0.629,50,1.31,51,1.19,55,1.794,58,2.272,78,3.056,109,2.114,110,3.87,111,3.056,164,2.114,174,2.587,209,1.98,210,2.508,211,2.9,212,4.222,213,1.98]],["title/controllers/ProjectsController.html",[29,1.433,214,1.961]],["body/controllers/ProjectsController.html",[7,0.035,13,0.19,14,0.164,15,0.139,18,0.54,19,0.341,23,0.719,25,0.19,26,0.093,27,0.015,28,0.015,29,0.79,32,1.225,34,0.307,35,1.041,36,1.536,38,1.718,41,1.962,43,1.123,46,1.385,47,1.92,48,3.482,49,1.475,50,0.933,51,0.847,52,1.475,53,1.618,54,1.081,55,1.462,58,1.142,59,2.532,62,0.95,65,1.945,66,1.945,67,1.225,70,1.416,73,0.872,75,1.225,77,0.872,78,0.967,79,3.007,80,3.356,82,1.416,83,1.347,105,2.389,156,1.718,158,1.225,163,2.137,164,2.561,165,1.561,166,1.225,171,1.081,214,1.718,215,1.416,216,3.374,217,1.945,218,3.188,219,1.416,220,1.707,221,1.707,222,2.712,223,1.416,224,1.707,225,1.707,226,2.712,227,1.707,228,1.707,229,2.712,230,3.702,231,3.188,232,3.843,233,3.843,234,1.416,235,2.832,236,1.707,237,1.707,238,2.712,239,2.712,240,1.707,241,1.225,242,1.945,243,1.416,244,1.945,245,1.945,246,1.707,247,1.707,248,1.707,249,1.707,250,1.707,251,1.707,252,1.707,253,1.707,254,1.707,255,1.707]],["title/modules/ProjectsModule.html",[0,1.085,8,1.753]],["body/modules/ProjectsModule.html",[0,1.492,2,1.323,3,1.97,7,0.035,8,3.363,9,2.578,10,2.41,11,1.78,12,1.78,13,0.35,14,0.302,15,0.256,17,2.695,18,0.62,19,0.627,23,1.792,24,2.41,25,0.35,26,0.171,27,0.024,28,0.024,98,2.607,124,2.845,165,2.578,166,2.254,214,3.056,256,2.607,257,2.607,258,2.607,259,3.143,260,3.143,261,2.607,262,3.053,263,3.143]],["title/injectables/ProjectsService.html",[143,0.905,165,1.433]],["body/injectables/ProjectsService.html",[7,0.035,13,0.236,14,0.204,15,0.173,18,0.563,19,0.424,25,0.236,26,0.115,27,0.018,28,0.018,34,0.382,35,1.232,36,1.818,37,2.862,38,2.033,43,1.355,46,1.639,49,1.78,50,1.126,51,1.022,52,1.78,53,1.818,54,2.033,55,1.561,59,1.486,62,0.744,71,1.622,72,1.344,83,1.513,87,1.486,88,1.083,105,2.368,111,1.202,135,1.639,142,2.664,143,0.938,155,1.083,164,0.982,165,1.486,167,2.303,170,1.202,213,1.202,217,2.303,218,2.663,219,2.663,223,2.663,234,2.663,235,2.955,241,1.522,242,2.303,243,1.76,264,1.76,265,2.122,266,3.582,267,2.122,268,3.211,269,2.122,270,2.122,271,2.122,272,2.122,273,1.522,274,2.122,275,1.76,276,2.122,277,2.122,278,2.122,279,2.122,280,2.122,281,2.122,282,3.211,283,2.122,284,2.122,285,2.122]],["title/classes/SubmitQuestionnaireDto.html",[26,0.168,286,1.753]],["body/classes/SubmitQuestionnaireDto.html",[7,0.034,13,0.44,14,0.38,15,0.323,18,0.44,25,0.44,26,0.268,27,0.028,28,0.028,34,0.712,41,2.021,43,1.157,51,0.873,106,2.242,109,2.289,117,2.507,286,2.801,287,4.103,288,3.284,289,3.055,290,3.548,291,3.96,292,3.96,293,4.947,294,4.947]],["title/classes/UpdateProjectDto.html",[26,0.168,235,1.753]],["body/classes/UpdateProjectDto.html",[7,0.035,13,0.466,14,0.403,15,0.342,18,0.57,25,0.466,26,0.228,27,0.029,28,0.029,36,2.375,105,2.141,106,2.375,108,3.008,174,2.375,235,2.903,242,3.008,295,3.479,296,4.194,297,3.479,298,3.479,299,4.194]],["title/interfaces/User.html",[47,1.188,209,1.753]],["body/interfaces/User.html",[7,0.034,13,0.389,14,0.336,15,0.285,18,0.389,25,0.389,27,0.026,28,0.026,34,0.629,47,1.754,50,1.31,51,1.19,55,1.754,62,1.891,78,3.056,109,2.114,119,3.87,174,2.587,209,1.98,210,2.508,212,4.222,213,1.98,289,3.056,290,3.65,300,2.9]],["title/controllers/UsersController.html",[29,1.433,301,1.961]],["body/controllers/UsersController.html",[7,0.035,13,0.297,14,0.256,15,0.218,18,0.566,19,0.533,23,1.123,25,0.297,26,0.145,27,0.021,28,0.021,29,1.235,32,1.914,34,0.48,35,1.458,41,1.362,43,0.78,47,2.137,48,2.724,49,1.024,50,0.648,51,0.588,52,1.024,53,1.123,55,1.293,58,1.123,59,2.622,65,2.724,66,1.914,67,1.914,71,1.416,73,1.362,75,1.914,77,1.362,78,1.511,79,3.172,80,2.724,83,0.935,129,2.151,132,1.69,145,1.914,171,1.69,230,3.998,231,3.151,244,1.914,245,1.914,286,3.208,289,2.151,301,2.406,302,2.213,303,2.668,304,3.151,305,2.213,306,2.668,307,2.668,308,3.799,309,3.799,310,2.213,311,2.213,312,2.668,313,2.668,314,2.668,315,2.668]],["title/modules/UsersModule.html",[0,1.085,9,1.433]],["body/modules/UsersModule.html",[0,1.464,2,1.287,3,1.933,7,0.035,9,2.703,10,2.365,11,1.731,12,1.731,13,0.34,14,0.294,15,0.249,17,2.645,18,0.615,19,0.61,23,1.758,24,2.365,25,0.34,26,0.166,27,0.023,28,0.023,71,1.924,104,2.995,124,2.821,129,2.365,132,1.936,145,2.192,244,2.192,245,2.192,261,2.535,301,3.013,316,2.535,317,2.535,318,3.057,319,2.535,320,3.057,321,3.057,322,2.995,323,3.057]],["title/injectables/UsersService.html",[71,0.991,143,0.905]],["body/injectables/UsersService.html",[7,0.035,13,0.226,14,0.195,15,0.165,18,0.533,19,0.405,25,0.226,26,0.11,27,0.017,28,0.017,34,0.365,35,1.191,36,1.756,37,2.926,38,1.964,39,2.573,40,2.574,43,1.401,46,1.035,47,1.446,49,1.745,50,1.103,51,1.002,52,1.745,53,1.914,54,1.964,55,1.541,59,2.103,62,0.711,64,1.454,69,1.682,71,0.993,83,1.593,87,0.939,88,1.035,135,1.584,142,2.626,143,0.906,144,1.682,167,1.454,170,1.148,213,1.148,217,3.025,241,1.454,266,3.499,273,1.454,275,1.682,286,2.824,289,1.148,304,2.573,305,2.573,310,1.682,311,1.682,324,1.682,325,3.102,326,2.028,327,2.028,328,3.102,329,2.028,330,2.028,331,2.028,332,3.102,333,2.028,334,2.028,335,2.028,336,2.028,337,2.028,338,3.102,339,3.102,340,2.028,341,2.028,342,2.028,343,2.028,344,2.028,345,1.682,346,2.028,347,2.028,348,2.028,349,2.028,350,2.028,351,3.102,352,2.028,353,3.102,354,2.028,355,2.028]],["title/coverage.html",[356,3.022]],["body/coverage.html",[7,0.035,15,0.186,26,0.243,27,0.019,28,0.019,29,1.87,30,1.442,31,1.889,40,1.29,46,1.163,47,1.299,51,0.502,68,1.633,71,0.729,73,1.163,94,1.29,105,1.163,107,1.889,108,2.428,118,1.889,126,1.633,128,2.559,129,1.29,131,1.889,132,1.442,133,2.559,143,1.307,156,1.442,157,2.428,158,1.633,163,1.442,164,1.567,165,1.054,171,1.442,172,1.889,176,1.889,209,1.917,211,1.889,214,1.442,215,1.889,235,1.29,262,1.633,264,1.889,286,1.29,287,1.889,288,1.889,295,1.889,300,1.889,301,1.442,302,1.889,322,1.633,324,1.889,356,1.633,357,2.278,358,2.278,359,2.278,360,2.278,361,2.278,362,6.109,363,5.753,364,4.473,365,1.889,366,5.541,367,1.889,368,2.278,369,1.889,370,4.04,371,2.808,372,2.808,373,1.889,374,2.278,375,2.278,376,1.889,377,2.278,378,1.889,379,1.889,380,2.278,381,2.278,382,1.889,383,1.889,384,1.889,385,2.808,386,1.889,387,2.278,388,2.278,389,1.889,390,2.278,391,2.278,392,2.278]],["title/dependencies.html",[3,1.722,393,2.15]],["body/dependencies.html",[3,1.671,7,0.035,19,0.72,26,0.253,27,0.026,28,0.026,97,2.286,103,2.589,117,2.286,185,3.87,187,2.995,188,2.995,189,2.995,213,2.044,297,2.995,298,2.995,394,3.61,395,3.61,396,5.168,397,3.61,398,3.61,399,3.61,400,3.61,401,3.61,402,3.61,403,3.61,404,3.61,405,3.61,406,3.61,407,3.61,408,3.61,409,3.61,410,3.61,411,3.61,412,3.61,413,3.61,414,3.61,415,3.61]],["title/miscellaneous/functions.html",[416,1.641,417,3.086]],["body/miscellaneous/functions.html",[7,0.031,27,0.031,28,0.031,34,0.836,367,3.853,369,4.797,416,2.942,417,3.853,418,4.646]],["title/index.html",[34,0.466,419,2.592,420,2.592]],["body/index.html",[7,0.034,14,0.278,15,0.236,27,0.023,28,0.023,58,1.22,164,1.341,345,2.403,356,2.078,421,2.897,422,2.897,423,4.025,424,2.897,425,2.897,426,2.897,427,2.897,428,2.897,429,2.403,430,2.403,431,2.403,432,2.403,433,2.897,434,4.625,435,2.897,436,2.897,437,2.897,438,2.897,439,5.575,440,2.897,441,2.897,442,2.897,443,2.897,444,2.897,445,2.897,446,2.897,447,2.897,448,2.897,449,2.897,450,2.897,451,2.897,452,2.897,453,2.897,454,5.436,455,2.897,456,2.897,457,4.025,458,2.897,459,2.897,460,2.897,461,2.897,462,4.025,463,4.025,464,2.897,465,2.897,466,2.897,467,4.025,468,4.025,469,2.897,470,2.897,471,2.897,472,2.897,473,2.403,474,2.897,475,2.897,476,2.897,477,2.897,478,2.897,479,2.897,480,2.897,481,2.897,482,2.897,483,2.897,484,2.403,485,2.897,486,2.897,487,2.897,488,2.897,489,2.897,490,2.897,491,2.403]],["title/modules.html",[2,1.774]],["body/modules.html",[1,2.671,2,1.775,6,2.388,7,0.029,8,2.388,9,1.952,27,0.029,28,0.029,124,2.153,473,4.793,492,5.778,493,5.778,494,5.924,495,4.217,496,4.217]],["title/overview.html",[497,3.495]],["body/overview.html",[1,3.66,2,1.307,3,1.954,4,2.576,5,2.576,6,3.217,7,0.034,8,3.318,9,2.742,10,2.391,11,1.759,12,1.759,23,1.307,27,0.024,28,0.024,71,1.818,91,2.576,93,2.576,94,2.716,106,1.759,124,2.627,130,1.967,165,2.22,170,1.759,197,2.576,210,2.227,256,2.576,257,2.576,258,2.576,316,2.576,317,2.576,319,2.576,497,2.576,498,4.222,499,4.222,500,3.105]],["title/properties.html",[109,1.722,393,2.15]],["body/properties.html",[7,0.034,27,0.03,28,0.03,58,1.877,109,2.063,429,3.699,430,3.699,431,3.699,432,3.699,484,3.699,491,3.699,501,4.459,502,4.459,503,4.459]],["title/miscellaneous/variables.html",[416,1.641,504,3.086]],["body/miscellaneous/variables.html",[7,0.036,27,0.017,28,0.017,34,0.665,46,1.546,47,1.721,50,0.735,51,1.256,55,1.587,58,0.828,62,0.689,83,0.689,87,1.402,110,1.41,111,1.114,119,1.41,126,2.172,139,1.245,142,1.004,147,1.245,155,2.772,262,2.172,273,2.172,289,1.114,290,1.41,322,2.172,365,1.631,371,1.631,372,3.443,373,2.513,376,1.631,378,1.631,379,3.065,382,1.631,383,3.065,384,1.631,385,1.631,386,2.513,389,1.631,416,1.245,504,1.631,505,3.029,506,3.029,507,1.967,508,1.967,509,1.967,510,1.967,511,1.967,512,1.967,513,5.336,514,5.336,515,3.695,516,1.967,517,1.967,518,3.695,519,3.695,520,1.967,521,3.029,522,1.967,523,1.967,524,4.483,525,3.029,526,1.967,527,4.151,528,1.967,529,3.029,530,1.967,531,3.029,532,1.967,533,1.967,534,1.967,535,1.967,536,3.029,537,1.967,538,1.967]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":502,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["1.1.19",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":500,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":498,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":499,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{},"overview.html":{}}}],["50",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["6.3.2",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["account",{"_index":132,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["algorithms",{"_index":207,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["already",{"_index":338,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":474,"title":{},"body":{"index.html":{}}}],["answers",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{}}}],["api",{"_index":432,"title":{},"body":{"index.html":{},"properties.html":{}}}],["app",{"_index":452,"title":{},"body":{"index.html":{}}}],["applications",{"_index":428,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":37,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["audience",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":172,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["auth0_audience=running",{"_index":451,"title":{},"body":{"index.html":{}}}],["auth0_id",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth0_issuer_url",{"_index":450,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":30,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["authguard",{"_index":173,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":175,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":484,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":496,"title":{},"body":{"modules.html":{}}}],["await",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":431,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":475,"title":{},"body":{"index.html":{}}}],["body",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":494,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":492,"title":{},"body":{"modules.html":{}}}],["building",{"_index":424,"title":{},"body":{"index.html":{}}}],["cache",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["canactivate",{"_index":134,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["canactivate(context",{"_index":138,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["charge",{"_index":430,"title":{},"body":{"index.html":{},"properties.html":{}}}],["class",{"_index":26,"title":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":106,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_projectsmodule",{"_index":256,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_imports",{"_index":257,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_providers",{"_index":258,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":316,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":317,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":318,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":319,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('project",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":275,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["constants.databaseconnectionstring",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants.projectmodelstring",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants.usermodelstring",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["constructor(projectmodel",{"_index":265,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(usermodel",{"_index":326,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":136,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["context",{"_index":141,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":148,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["controller",{"_index":29,"title":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('projects",{"_index":246,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["controller('users",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["corresponding",{"_index":445,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":356,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":36,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{}}}],["create(createprojectdto",{"_index":219,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["create(createuserdto",{"_index":39,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["createdproject",{"_index":278,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createdproject.save",{"_index":280,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createduser",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprojectdto",{"_index":105,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["creates",{"_index":222,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["createuserdto",{"_index":40,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creator",{"_index":158,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{},"controllers/ProjectsController.html":{},"coverage.html":{}}}],["ctx",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":127,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database_connection",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnectionstring",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":124,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":126,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":41,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProjectsController.html":{},"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":43,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["developed",{"_index":433,"title":{},"body":{"index.html":{}}}],["development",{"_index":453,"title":{},"body":{"index.html":{}}}],["document",{"_index":212,"title":{},"body":{"interfaces/Project.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto/create",{"_index":241,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dto/submit",{"_index":310,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":243,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["e2e",{"_index":464,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":425,"title":{},"body":{"index.html":{}}}],["email",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":447,"title":{},"body":{"index.html":{}}}],["error",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["exception",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["executioncontext",{"_index":139,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":174,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":183,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":154,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["fetches",{"_index":229,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["fields",{"_index":239,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":217,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findall(@user('sub",{"_index":248,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findall(auth0_id",{"_index":223,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["findone",{"_index":38,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":251,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findone(@user('sub",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["findone(id",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findonebyauth0id",{"_index":325,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyauth0id(id",{"_index":332,"title":{},"body":{"injectables/UsersService.html":{}}}],["finds",{"_index":226,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["following",{"_index":443,"title":{},"body":{"index.html":{}}}],["framework",{"_index":423,"title":{},"body":{"index.html":{}}}],["function",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":417,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuse",{"_index":429,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(':id",{"_index":250,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getting",{"_index":419,"title":{"index.html":{}},"body":{}}],["given",{"_index":230,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["graph",{"_index":495,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":470,"title":{},"body":{"index.html":{}}}],["guard",{"_index":128,"title":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":130,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"overview.html":{}}}],["guards/is",{"_index":244,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["guards/jwt",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":481,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":488,"title":{},"body":{"index.html":{}}}],["id",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":146,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":273,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inject(constants.projectmodelstring",{"_index":277,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["inject(constants.usermodelstring",{"_index":336,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":143,"title":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":170,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":438,"title":{},"body":{"index.html":{}}}],["installenvironment",{"_index":440,"title":{},"body":{"index.html":{}}}],["instead",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["interface",{"_index":209,"title":{"interfaces/Project.html":{},"interfaces/User.html":{}},"body":{"interfaces/Project.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":210,"title":{},"body":{"interfaces/Project.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/project.interface",{"_index":274,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["interfaces/user.interface",{"_index":144,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"injectables/UsersService.html":{}}}],["internal",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{}}}],["isaccountownerguard",{"_index":129,"title":{"guards/IsAccountOwnerGuard.html":{}},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["isaccountownerguard)@post('/questionnaire/:id",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{}}}],["iscreatorownerguard",{"_index":156,"title":{"guards/IsCreatorOwnerGuard.html":{}},"body":{"guards/IsCreatorOwnerGuard.html":{},"controllers/ProjectsController.html":{},"coverage.html":{}}}],["iscreatorownerguard)@post",{"_index":220,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isemail",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotemptyobject",{"_index":293,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isobject",{"_index":294,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isobject()@isnotemptyobject",{"_index":291,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isprojectownerguard",{"_index":163,"title":{"guards/IsProjectOwnerGuard.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"coverage.html":{}}}],["isprojectownerguard)@get(':id",{"_index":227,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@patch(':id",{"_index":236,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isstring",{"_index":112,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{}}}],["issuer",{"_index":205,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["join",{"_index":477,"title":{},"body":{"index.html":{}}}],["jwks",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwksrequestsperminute",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwksuri",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":73,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":94,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":485,"title":{},"body":{"index.html":{}}}],["keys",{"_index":444,"title":{},"body":{"index.html":{}}}],["known/jwks.json",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["license",{"_index":491,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":468,"title":{},"body":{"index.html":{}}}],["logouri",{"_index":110,"title":{},"body":{"classes/CreateProjectDto.html":{},"interfaces/Project.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["make",{"_index":441,"title":{},"body":{"index.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":416,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":467,"title":{},"body":{"index.html":{}}}],["mode",{"_index":457,"title":{},"body":{"index.html":{}}}],["model",{"_index":266,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo_uri",{"_index":449,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":213,"title":{},"body":{"interfaces/Project.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.connect(process.env.mongo_uri",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":480,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":486,"title":{},"body":{"index.html":{}}}],["name",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":434,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":490,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":297,"title":{},"body":{"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":422,"title":{},"body":{"index.html":{}}}],["npm",{"_index":439,"title":{},"body":{"index.html":{}}}],["object",{"_index":290,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":469,"title":{},"body":{"index.html":{}}}],["optional",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":497,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":233,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["owner.guard",{"_index":245,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["owner.guard.ts",{"_index":133,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"coverage.html":{}}}],["owner.guard.ts:5",{"_index":159,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["owner.guard.ts:6",{"_index":137,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["owner.guard.ts:8",{"_index":160,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["owner.guard.ts:9",{"_index":140,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["ownerid",{"_index":111,"title":{},"body":{"classes/CreateProjectDto.html":{},"guards/IsCreatorOwnerGuard.html":{},"interfaces/Project.html":{},"injectables/ProjectsService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":393,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":149,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["partialtype",{"_index":296,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createprojectdto",{"_index":299,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["passport",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportjwtsecret",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":182,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["patch",{"_index":240,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["patch(':id",{"_index":253,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["payload",{"_index":181,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":478,"title":{},"body":{"index.html":{}}}],["port",{"_index":448,"title":{},"body":{"index.html":{}}}],["post",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["post('/login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/questionnaire/:id",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":32,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":167,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["process.env.auth0_audience",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url",{"_index":206,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url}.well",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["production",{"_index":459,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":421,"title":{},"body":{"index.html":{}}}],["project",{"_index":164,"title":{"interfaces/Project.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"coverage.html":{},"index.html":{}}}],["project.dto",{"_index":242,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":108,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["project.dto.ts:11",{"_index":113,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:14",{"_index":114,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:5",{"_index":116,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:8",{"_index":115,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project_model",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectmodel",{"_index":268,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projectmodelstring",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects",{"_index":216,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projects.constants",{"_index":276,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projects.controller",{"_index":260,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["projects.providers",{"_index":263,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["projects.service",{"_index":166,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["projects/projects.module",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["projectschema",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectscontroller",{"_index":214,"title":{"controllers/ProjectsController.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"coverage.html":{}}}],["projectsmodule",{"_index":8,"title":{"modules/ProjectsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["projectsproviders",{"_index":262,"title":{},"body":{"modules/ProjectsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectsservice",{"_index":165,"title":{"injectables/ProjectsService.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":142,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":109,"title":{"properties.html":{}},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Project.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["questionnaire",{"_index":289,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["questionnaire.dto",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["questionnaire.dto.ts",{"_index":288,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"coverage.html":{}}}],["questionnaire.dto.ts:6",{"_index":292,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["ratelimit",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["read",{"_index":479,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{}}}],["ref",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":437,"title":{},"body":{"index.html":{}}}],["request",{"_index":147,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"miscellaneous/variables.html":{}}}],["request.body?.ownerid",{"_index":161,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["request.user",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.user?.sub",{"_index":150,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["requesting",{"_index":232,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["required",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["rs256",{"_index":208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["rsa",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["run",{"_index":454,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":426,"title":{},"body":{"index.html":{}}}],["secretorkeyprovider",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["side",{"_index":427,"title":{},"body":{"index.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":472,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project.schema.ts",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../projects.constants.ts",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../projects.providers.ts",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.constants.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.providers.ts",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":31,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/guards/jwt",{"_index":171,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":176,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":178,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:27",{"_index":180,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/database.module",{"_index":261,"title":{},"body":{"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["src/database.module.ts",{"_index":125,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database.providers.ts",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/projects/dto/create",{"_index":107,"title":{},"body":{"classes/CreateProjectDto.html":{},"coverage.html":{}}}],["src/projects/dto/update",{"_index":295,"title":{},"body":{"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["src/projects/guards/is",{"_index":157,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"coverage.html":{}}}],["src/projects/interfaces/project.interface.ts",{"_index":211,"title":{},"body":{"interfaces/Project.html":{},"coverage.html":{}}}],["src/projects/projects.constants.ts",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/projects/projects.controller.ts",{"_index":215,"title":{},"body":{"controllers/ProjectsController.html":{},"coverage.html":{}}}],["src/projects/projects.controller.ts:20",{"_index":221,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:29",{"_index":225,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:40",{"_index":228,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:52",{"_index":237,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.module.ts",{"_index":259,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["src/projects/projects.providers.ts",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/projects/projects.service.ts",{"_index":264,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["src/projects/projects.service.ts:10",{"_index":267,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:17",{"_index":269,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:22",{"_index":271,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:26",{"_index":270,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:31",{"_index":272,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/schemas/project.schema.ts",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/submit",{"_index":287,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"coverage.html":{}}}],["src/users/guards/is",{"_index":131,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"coverage.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":300,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/user.decorator",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{}}}],["src/users/user.decorator.ts",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.constants.ts",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProjectsModule.html":{}}}],["src/users/users.module.ts",{"_index":320,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.providers.ts",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{}}}],["src/users/users.service.ts",{"_index":324,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:16",{"_index":329,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":330,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":331,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":333,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":334,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":327,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":455,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":458,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":460,"title":{},"body":{"index.html":{}}}],["started",{"_index":420,"title":{"index.html":{}},"body":{}}],["starter",{"_index":436,"title":{},"body":{"index.html":{}}}],["statements",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":482,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":184,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["submitquestionnaire",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnaire(@param(':id",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["submitquestionnaire(id",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnairedto",{"_index":286,"title":{"classes/SubmitQuestionnaireDto.html":{}},"body":{"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["submitquestionnairedto.questionnaire",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["submits",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":473,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":442,"title":{},"body":{"index.html":{}}}],["svg",{"_index":493,"title":{},"body":{"modules.html":{}}}],["table",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":463,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":466,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":465,"title":{},"body":{"index.html":{}}}],["tests",{"_index":462,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":471,"title":{},"body":{"index.html":{}}}],["this.projectmodel(createprojectdto",{"_index":279,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.find",{"_index":284,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findbyid(id",{"_index":281,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findbyidandupdate(id",{"_index":285,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectsservice.create(createprojectdto",{"_index":247,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findall(auth0_id",{"_index":249,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(id",{"_index":252,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(params.id",{"_index":168,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["this.projectsservice.update(id",{"_index":255,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.usermodel(createuserdto",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(ownerid",{"_index":162,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["this.usersservice.findone(params.id",{"_index":152,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{}}}],["this.usersservice.findone(project?.ownerid",{"_index":169,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["this.usersservice.findonebyauth0id(auth0_id",{"_index":283,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.usersservice.findonebyauth0id(id",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.submitquestionnaire(id",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["timestamps",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":337,"title":{},"body":{"injectables/UsersService.html":{}}}],["touch",{"_index":483,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":155,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":489,"title":{},"body":{"index.html":{}}}],["type",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":298,"title":{},"body":{"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":435,"title":{},"body":{"index.html":{}}}],["unique",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":461,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":503,"title":{},"body":{"properties.html":{}}}],["update",{"_index":218,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["update(@param('id",{"_index":254,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["update(id",{"_index":234,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["updateprojectdto",{"_index":235,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["updates",{"_index":238,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["usefactory",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":224,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["useguards(jwtauthguard)@post('/login",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@post('/register",{"_index":42,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":47,"title":{"interfaces/User.html":{}},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"controllers/ProjectsController.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user?.[data",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.id",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_model",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userbyid",{"_index":151,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["userbyid.auth0_id",{"_index":153,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["userid",{"_index":282,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["usermodel",{"_index":328,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodelstring",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.constants",{"_index":335,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":321,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.providers",{"_index":323,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":145,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":301,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":9,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":322,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":71,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":177,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":179,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":117,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"dependencies.html":{}}}],["value",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":446,"title":{},"body":{"index.html":{}}}],["variable",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":504,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifies",{"_index":231,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["version",{"_index":501,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":456,"title":{},"body":{"index.html":{}}}],["website",{"_index":487,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":476,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ProjectsModule } from './projects/projects.module';\n\n@Module({\n  imports: [AuthModule, UsersModule, ProjectsModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n                    Registers a new user for the authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Logs in the authenticated user's auth0_id and returns the user id in our db\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { User } from 'src/users/user.decorator';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly usersService: UsersService) { }\n\n    /**\n     * Registers a new user for the authenticated user\n     * @param createUserDto \n     */\n    @UseGuards(JwtAuthGuard)\n    @Post('/register')\n    create(@Body() createUserDto: CreateUserDto) {\n        return this.usersService.create(createUserDto);\n    }\n\n    /**\n     * \n     * @param id Logs in the authenticated user's auth0_id and returns the user id in our db\n     */\n    @UseGuards(JwtAuthGuard)\n    @Post('/login')\n    async findOne(@User('sub') id: string) {\n        const user = await this.usersService.findOneByAuth0Id(id);\n        return { id: user?.id };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtStrategy } from './jwt.strategy';\nimport { AuthController } from './auth.controller';\n\n@Module({\n    imports: [UsersModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n    providers: [JwtStrategy],\n    exports: [PassportModule],\n    controllers: [AuthController],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/create-project.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                logoUri\n                            \n                            \n                                name\n                            \n                            \n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoUri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateProjectDto {\n    @IsString()\n    ownerId: string;\n\n    @IsString()\n    name: string;\n\n    @IsString()\n    description: string;\n\n    @IsString()\n    logoUri: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth0_id\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth0_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsString()\n    name: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    auth0_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAccountOwnerGuard.html":{"url":"guards/IsAccountOwnerGuard.html","title":"guard - IsAccountOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAccountOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/guards/is-account-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/guards/is-account-owner.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/users/guards/is-account-owner.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { User } from '../interfaces/user.interface';\nimport { UsersService } from '../users.service';\n\n@Injectable()\nexport class IsAccountOwnerGuard implements CanActivate {\n  constructor(private usersService: UsersService) { }\n\n  async canActivate(\n    context: ExecutionContext,\n  ): Promise {\n\n    const request = context.switchToHttp().getRequest();\n    const { params }: { params: { id: string } } = request;\n    const auth0_id = request?.user?.sub;\n    const userById = await this.usersService.findOne(params.id);\n\n    if (!auth0_id || !userById || auth0_id !== userById.auth0_id) return false;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsCreatorOwnerGuard.html":{"url":"guards/IsCreatorOwnerGuard.html","title":"guard - IsCreatorOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsCreatorOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/projects/guards/is-creator-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/projects/guards/is-creator-owner.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/guards/is-creator-owner.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class IsCreatorOwnerGuard implements CanActivate {\n  constructor(private usersService: UsersService) { }\n\n  async canActivate(\n    context: ExecutionContext,\n  ): Promise {\n\n    const request = context.switchToHttp().getRequest();\n    const ownerId = request.body?.ownerId;\n    const auth0_id = request?.user?.sub;\n    const userById = await this.usersService.findOne(ownerId);\n\n    if (!auth0_id || !userById || auth0_id !== userById.auth0_id) return false;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsProjectOwnerGuard.html":{"url":"guards/IsProjectOwnerGuard.html","title":"guard - IsProjectOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsProjectOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/projects/guards/is-project-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, projectsService: ProjectsService)\n                    \n                \n                        \n                            \n                                Defined in src/projects/guards/is-project-owner.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectsService\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/guards/is-project-owner.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { ProjectsService } from '../projects.service';\n\n@Injectable()\nexport class IsProjectOwnerGuard implements CanActivate {\n  constructor(private usersService: UsersService, private projectsService: ProjectsService) { }\n\n  async canActivate(\n    context: ExecutionContext,\n  ): Promise {\n\n    const request = context.switchToHttp().getRequest();\n    const { params }: { params: { id: string } } = request;\n    const auth0_id = request?.user?.sub;\n    const project = await this.projectsService.findOne(params.id);\n    const userById = await this.usersService.findOne(project?.ownerId);\n\n    if (!auth0_id || !userById || auth0_id !== userById.auth0_id) return false;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { passportJwtSecret } from 'jwks-rsa';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            secretOrKeyProvider: passportJwtSecret({\n                cache: true,\n                rateLimit: true,\n                jwksRequestsPerMinute: 5,\n                jwksUri: `${process.env.AUTH0_ISSUER_URL}.well-known/jwks.json`,\n            }),\n\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            audience: process.env.AUTH0_AUDIENCE,\n            issuer: `${process.env.AUTH0_ISSUER_URL}`,\n            algorithms: ['RS256'],\n        });\n    }\n\n    validate(payload: unknown): unknown {\n        return payload;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/interfaces/project.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            logoUri\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface Project extends Document {\n    readonly ownerId: string;\n    readonly name: string;\n    readonly description: string;\n    readonly logoUri: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectsController.html":{"url":"controllers/ProjectsController.html","title":"controller - ProjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/projects.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                projects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProjectDto: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsCreatorOwnerGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:20\n                \n            \n\n\n            \n                \n                    Creates a new project for the authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(auth0_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:29\n                \n            \n\n\n            \n                \n                    Finds all the projects of the authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth0_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:40\n                \n            \n\n\n            \n                \n                    Fetches the project by the given id and verifies that the requesting\nauthenticated user is the owner of the project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:52\n                \n            \n\n\n            \n                \n                    Updates the project with the given id with the given fields for the update\nand verifies that the requesting authenticated user is the owner of the project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project ID\n\n                                    \n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { User } from 'src/users/user.decorator';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\nimport { IsCreatorOwnerGuard } from './guards/is-creator-owner.guard';\nimport { IsProjectOwnerGuard } from './guards/is-project-owner.guard';\nimport { ProjectsService } from './projects.service';\n\n@Controller('projects')\nexport class ProjectsController {\n  constructor(private readonly projectsService: ProjectsService) { }\n\n  /**\n   * Creates a new project for the authenticated user\n   * @param createProjectDto \n   */\n  @UseGuards(JwtAuthGuard, IsCreatorOwnerGuard)\n  @Post()\n  create(@Body() createProjectDto: CreateProjectDto) {\n    return this.projectsService.create(createProjectDto);\n  }\n\n  /**\n   * Finds all the projects of the authenticated user\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll(@User('sub') auth0_id: string) {\n    return this.projectsService.findAll(auth0_id);\n  }\n\n  /**\n   * Fetches the project by the given id and verifies that the requesting \n   * authenticated user is the owner of the project \n   * @param id Project ID\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.projectsService.findOne(id);\n  }\n\n  /**\n   * Updates the project with the given id with the given fields for the update \n   * and verifies that the requesting authenticated user is the owner of the project \n   * @param id Project ID\n   * @param updateProjectDto \n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProjectDto: UpdateProjectDto) {\n    return this.projectsService.update(id, updateProjectDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsModule.html":{"url":"modules/ProjectsModule.html","title":"module - ProjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_imports\n\n\n\ncluster_ProjectsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nDatabaseModule->ProjectsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nProjectsModule -->\n\nUsersModule->ProjectsModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/projects/projects.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProjectsService } from './projects.service';\nimport { ProjectsController } from './projects.controller';\nimport { DatabaseModule } from 'src/database.module';\nimport { projectsProviders } from './projects.providers';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [UsersModule, DatabaseModule],\n  controllers: [ProjectsController],\n  providers: [\n    ProjectsService,\n    ...projectsProviders]\n})\nexport class ProjectsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectModel: Model, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/projects/projects.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createProjectDto: CreateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(auth0_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth0_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { UsersService } from 'src/users/users.service';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\nimport { Project } from './interfaces/project.interface';\nimport * as constants from './projects.constants';\n\n@Injectable()\nexport class ProjectsService {\n    constructor(\n        @Inject(constants.projectModelString)\n        private projectModel: Model,\n        private usersService: UsersService,\n    ) { }\n\n    async create(createProjectDto: CreateProjectDto): Promise {\n        const createdProject = new this.projectModel(createProjectDto);\n        return createdProject.save();\n    }\n\n    async findOne(id: string): Promise {\n        return this.projectModel.findById(id)\n    }\n\n    async findAll(auth0_id: string): Promise {\n        const userId = await this.usersService.findOneByAuth0Id(auth0_id);\n        return this.projectModel.find({ ownerId: userId });\n    }\n\n    async update(id: string, updateProjectDto: UpdateProjectDto): Promise {\n        return this.projectModel.findByIdAndUpdate(id, updateProjectDto, { new: true });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitQuestionnaireDto.html":{"url":"classes/SubmitQuestionnaireDto.html","title":"class - SubmitQuestionnaireDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitQuestionnaireDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/submit-questionnaire.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        questionnaire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/submit-questionnaire.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyObject, IsObject } from 'class-validator';\n\nexport class SubmitQuestionnaireDto {\n    @IsObject()\n    @IsNotEmptyObject()\n    questionnaire: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/update-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProjectDto } from './create-project.dto';\n\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth0_id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            questionnaire\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth0_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth0_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionnaire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionnaire:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n    readonly name: string;\n    readonly email: string;\n    readonly auth0_id: string;\n    readonly questionnaire: object;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitQuestionnaire\n                        \n                    \n                \n            \n            \n                \nsubmitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsAccountOwnerGuard)@Post('/questionnaire/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:19\n                \n            \n\n\n            \n                \n                    Submits questionnaire answers for the given user id and verifies that the authenticated\nuser has the given user id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User ID\n\n                                    \n                                \n                                \n                                    submitQuestionnaireDto\n                                    \n                                                SubmitQuestionnaireDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Param } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { SubmitQuestionnaireDto } from './dto/submit-questionnaire.dto';\nimport { IsAccountOwnerGuard } from './guards/is-account-owner.guard';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  /**\n   * Submits questionnaire answers for the given user id and verifies that the authenticated \n   * user has the given user id\n   * @param id User ID\n   * @param submitQuestionnaireDto \n   */\n  @UseGuards(JwtAuthGuard, IsAccountOwnerGuard)\n  @Post('/questionnaire/:id')\n  submitQuestionnaire(@Param(':id') id: string, @Body() submitQuestionnaireDto: SubmitQuestionnaireDto) {\n    return this.usersService.submitQuestionnaire(id, submitQuestionnaireDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { DatabaseModule } from 'src/database.module';\nimport { usersProviders } from './users.providers';\nimport { IsAccountOwnerGuard } from './guards/is-account-owner.guard';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [\n    UsersService,\n    IsAccountOwnerGuard,\n    ...usersProviders\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByAuth0Id\n                            \n                            \n                                    Async\n                                submitQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByAuth0Id\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByAuth0Id(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitQuestionnaire\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    submitQuestionnaireDto\n                                    \n                                                SubmitQuestionnaireDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { SubmitQuestionnaireDto } from './dto/submit-questionnaire.dto';\nimport { User } from './interfaces/user.interface';\nimport * as constants from './users.constants';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(constants.userModelString)\n    private userModel: Model,\n  ) { }\n\n\n  async create(createUserDto: CreateUserDto): Promise {\n    //TODO: When a user already exists, throw a custom exception of user already exists instead of internal server error\n    const createdUser = new this.userModel(createUserDto);\n    return createdUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return this.userModel.findOne({ _id: id }).exec();\n  }\n\n  async findOneByAuth0Id(id: string): Promise {\n    return this.userModel.findOne({ auth0_id: id }).exec();\n  }\n\n  async submitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto) {\n    return await this.userModel.findByIdAndUpdate(id,\n      { questionnaire: submitQuestionnaireDto.questionnaire }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/dto/create-project.dto.ts\n            \n            class\n            CreateProjectDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/projects/dto/update-project.dto.ts\n            \n            class\n            UpdateProjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/guards/is-creator-owner.guard.ts\n            \n            guard\n            IsCreatorOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/projects/guards/is-project-owner.guard.ts\n            \n            guard\n            IsProjectOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/projects/interfaces/project.interface.ts\n            \n            interface\n            Project\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/projects/projects.constants.ts\n            \n            variable\n            databaseConnectionString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.constants.ts\n            \n            variable\n            projectModelString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.controller.ts\n            \n            controller\n            ProjectsController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/projects/projects.providers.ts\n            \n            variable\n            projectsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/projects/schemas/project.schema.ts\n            \n            variable\n            ProjectSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/submit-questionnaire.dto.ts\n            \n            class\n            SubmitQuestionnaireDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/guards/is-account-owner.guard.ts\n            \n            guard\n            IsAccountOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.constants.ts\n            \n            variable\n            databaseConnectionString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.constants.ts\n            \n            variable\n            userModelString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/users/users.providers.ts\n            \n            variable\n            usersProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.0\n        \n            jwks-rsa : ^2.1.0\n        \n            mongoose : ^6.3.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nFuse Charge Backend API developed with Nest framework TypeScript starter repository.\nInstallation\n$ npm installEnvironment\nMake sure to have the following keys and corresponding values in the .env file\nPORT=\nMONGO_URI=\nAUTH0_ISSUER_URL=\nAUTH0_AUDIENCE=Running the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_imports\n\n\n\ncluster_ProjectsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProjectsModule -->\n\nUsersModule->ProjectsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nProjectsModule -->\n\nDatabaseModule->ProjectsModule\n\n\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Fuse Charge Backend API\n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseConnectionString   (src/.../projects.constants.ts)\n                        \n                        \n                            databaseConnectionString   (src/.../users.constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            projectModelString   (src/.../projects.constants.ts)\n                        \n                        \n                            ProjectSchema   (src/.../project.schema.ts)\n                        \n                        \n                            projectsProviders   (src/.../projects.providers.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            userModelString   (src/.../users.constants.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            usersProviders   (src/.../users.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/projects/projects.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConnectionString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATABASE_CONNECTION'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectModelString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PROJECT_MODEL'\n                    \n                \n\n\n        \n    \n\n    src/users/users.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConnectionString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATABASE_CONNECTION'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userModelString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_MODEL'\n                    \n                \n\n\n        \n    \n\n    src/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: 'DATABASE_CONNECTION',\n        useFactory: (): Promise =>\n            mongoose.connect(process.env.MONGO_URI),\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/projects/schemas/project.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProjectSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        ownerId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n        name: { type: String, required: true },\n        description: { type: String, required: true },\n        logoUri: { type: String },\n    },\n    {\n        timestamps: true\n    }\n)\n                    \n                \n\n\n        \n    \n\n    src/projects/projects.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        projectsProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: constants.projectModelString,\n        useFactory: (connection: Connection) => connection.model('Project', ProjectSchema),\n        inject: [constants.databaseConnectionString],\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/users/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        const user = request.user;\n\n        return data ? user?.[data] : user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        name: { type: String },\n        email: { type: String, required: true, unique: true, index: true },\n        auth0_id: { type: String, required: true, unique: true, index: true },\n        questionnaire: { type: Object },\n    },\n    {\n        timestamps: true\n    }\n)\n                    \n                \n\n\n        \n    \n\n    src/users/users.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: constants.userModelString,\n        useFactory: (connection: Connection) => connection.model('User', UserSchema),\n        inject: [constants.databaseConnectionString],\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

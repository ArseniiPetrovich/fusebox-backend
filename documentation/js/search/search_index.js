var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.085,1,1.961]],["body/modules/AppModule.html",[0,1.557,1,3.806,2,1.41,3,2.056,4,2.779,5,2.779,6,3.214,7,0.035,8,3.214,9,2.627,10,2.516,11,1.897,12,1.897,13,0.373,14,0.322,15,0.273,16,3.35,17,2.813,18,0.59,19,0.669,20,3.35,21,3.35,22,3.35,23,1.41,24,1.897,25,0.373,26,0.182,27,0.025,28,0.025]],["title/controllers/AuthController.html",[29,1.433,30,1.961]],["body/controllers/AuthController.html",[7,0.035,13,0.27,14,0.234,15,0.198,18,0.546,19,0.485,23,1.024,25,0.27,26,0.132,27,0.02,28,0.02,29,1.644,30,2.25,31,2.017,32,0.438,33,1.364,34,2.012,35,2.143,36,2.25,37,2.017,38,2.999,39,1.814,40,2.432,41,1.038,42,2.432,43,3.553,44,1.814,45,2.084,46,3.311,47,1.364,48,0.862,49,0.783,50,1.364,51,1.944,52,1.54,53,1.227,54,2.432,55,2.432,56,1.024,57,2.373,58,3.553,59,3.553,60,1.245,61,3.553,62,1.744,63,1.744,64,1.744,65,1.744,66,1.744,67,2.017,68,2.017,69,1.344,70,1.54,71,1.242,72,2.432,73,1.744,74,1.744,75,2.432,76,1.54,77,1.744,78,1.242,79,1.377,80,2.548,81,2.548,82,2.432,83,2.017,84,1.245,85,2.432,86,2.432,87,2.432,88,1.125,89,1.242,90,2.432,91,2.432]],["title/modules/AuthModule.html",[0,1.085,6,1.753]],["body/modules/AuthModule.html",[0,1.531,2,1.375,3,2.021,6,3.311,7,0.035,9,2.608,10,2.474,11,1.85,12,1.85,13,0.363,14,0.314,15,0.266,17,2.766,18,0.609,19,0.652,23,1.839,24,2.474,25,0.363,26,0.177,27,0.025,28,0.025,30,3.116,92,2.709,93,3.266,94,2.709,95,3.191,96,3.266,97,4.368,98,2.068,99,2.709,100,3.266,101,3.266,102,3.266,103,3.266,104,2.343,105,2.343]],["title/classes/CreateProjectDto.html",[26,0.168,106,1.581]],["body/classes/CreateProjectDto.html",[7,0.035,13,0.366,14,0.316,15,0.269,18,0.366,25,0.366,26,0.238,27,0.025,28,0.025,32,0.593,39,2.691,41,1.541,48,1.199,49,1.162,53,1.712,56,2.08,106,2.242,107,1.865,108,4.555,109,2.362,110,2.033,111,3.544,112,2.799,113,4.92,114,3.294,115,3.294,116,3.294,117,3.294,118,2.086]],["title/classes/CreateUserDto.html",[26,0.168,38,1.753]],["body/classes/CreateUserDto.html",[7,0.034,13,0.388,14,0.335,15,0.284,18,0.388,25,0.388,26,0.247,27,0.026,28,0.026,32,0.627,38,2.582,39,2.594,41,1.485,48,1.233,49,1.12,53,1.677,60,1.781,66,3.865,107,1.974,110,2.11,113,4.64,118,2.207,119,2.891,120,3.644,121,3.485,122,5.081,123,3.485,124,3.485]],["title/modules/DatabaseModule.html",[0,1.085,125,1.581]],["body/modules/DatabaseModule.html",[0,1.791,2,1.758,7,0.035,13,0.464,14,0.401,15,0.34,18,0.568,19,0.833,24,2.364,25,0.464,26,0.226,27,0.029,28,0.029,105,2.994,125,2.61,126,4.175,127,3.962,128,4.175]],["title/guards/IsAccountOwnerGuard.html",[129,1.961,130,1.753]],["body/guards/IsAccountOwnerGuard.html",[7,0.035,13,0.31,14,0.268,15,0.227,18,0.504,19,0.556,25,0.31,26,0.151,27,0.022,28,0.022,32,0.502,33,1.504,35,2.313,41,1.145,45,1.07,47,1.504,48,0.951,49,0.864,50,1.504,51,1.174,53,0.815,57,1.29,60,1.588,69,1.719,78,1.423,84,1.373,88,2.274,89,1.423,130,2.219,131,1.766,132,3.758,133,2.869,134,1.766,135,3.714,136,1.423,137,1.999,138,2.313,139,1.999,140,3.112,141,2.313,142,2.81,143,2,144,1.145,145,2.313,146,1.999,147,1.999,148,2.481,149,1.999,150,3.25,151,1.999,152,2.81,153,2.788,154,1.999,155,1.999,156,1.423]],["title/guards/IsCreatorOwnerGuard.html",[129,1.961,157,1.961]],["body/guards/IsCreatorOwnerGuard.html",[7,0.035,13,0.326,14,0.282,15,0.239,18,0.452,19,0.586,25,0.326,26,0.159,27,0.023,28,0.023,32,0.528,33,1.559,35,2.377,41,1.187,47,1.559,48,0.986,49,0.895,50,1.559,51,1.235,60,1.632,69,1.747,70,1.859,78,1.498,84,1.423,88,2.326,89,1.498,112,1.662,131,1.859,134,1.859,135,3.784,136,1.498,137,2.105,139,2.105,140,3.183,142,2.912,143,2.073,144,1.187,147,2.105,148,1.859,149,2.105,151,2.105,152,2.912,154,2.105,155,2.105,156,1.498,157,2.572,158,3.34,159,3.34,160,2.935,161,2.935,162,2.935,163,2.935]],["title/guards/IsProjectOwnerGuard.html",[129,1.961,164,1.961]],["body/guards/IsProjectOwnerGuard.html",[7,0.035,13,0.297,14,0.257,15,0.218,18,0.492,19,0.534,25,0.297,26,0.145,27,0.021,28,0.021,32,0.481,33,1.46,35,2.261,41,1.112,47,1.46,48,0.923,49,0.838,50,1.46,51,1.125,53,0.781,57,1.237,60,1.552,69,1.695,70,1.693,78,1.365,84,1.333,88,2.359,89,1.942,131,1.693,134,1.693,135,3.655,136,1.365,137,1.917,138,2.218,139,1.917,140,3.055,141,2.218,142,2.728,143,1.942,144,1.112,147,1.917,148,2.409,149,1.917,150,3.155,151,1.917,152,2.728,154,1.917,155,1.917,156,1.365,158,3.176,164,2.409,165,2.232,166,2.522,167,1.917,168,1.917,169,2.673,170,2.673]],["title/injectables/JwtAuthGuard.html",[71,1.581,144,0.905]],["body/injectables/JwtAuthGuard.html",[7,0.035,13,0.469,14,0.405,15,0.344,18,0.572,19,0.842,25,0.469,26,0.229,27,0.029,28,0.029,71,2.627,98,2.672,144,1.504,171,2.39,172,2.672,173,3.5,174,4.22,175,2.39,176,4.22]],["title/injectables/JwtStrategy.html",[95,1.753,144,0.905]],["body/injectables/JwtStrategy.html",[7,0.035,13,0.346,14,0.299,15,0.254,18,0.599,19,0.621,25,0.346,26,0.169,27,0.024,28,0.024,32,0.56,33,1.622,41,1.235,47,1.194,48,0.755,50,1.194,62,3.031,84,1.09,95,2.393,98,1.97,104,2.231,136,2.451,144,1.235,156,2.157,171,1.761,175,1.761,177,2.58,178,4.226,179,3.11,180,4.226,181,3.11,182,4.226,183,3.11,184,3.11,185,3.11,186,2.58,187,4.226,188,2.58,189,2.58,190,3.505,191,3.11,192,3.11,193,3.11,194,3.11,195,3.11,196,3.11,197,3.11,198,2.58,199,3.11,200,3.11,201,3.11,202,3.11,203,3.11,204,3.11,205,3.11,206,3.11,207,3.11,208,3.11,209,3.11]],["title/interfaces/Project.html",[165,1.433,210,1.753]],["body/interfaces/Project.html",[7,0.034,13,0.389,14,0.336,15,0.285,18,0.389,25,0.389,27,0.026,28,0.026,32,0.63,48,1.31,49,1.19,53,1.794,56,2.273,79,3.058,110,2.116,111,3.872,112,3.058,165,2.116,175,2.589,210,1.982,211,2.511,212,2.904,213,4.224,214,1.982]],["title/controllers/ProjectsController.html",[29,1.433,215,1.961]],["body/controllers/ProjectsController.html",[7,0.035,13,0.189,14,0.163,15,0.139,18,0.539,19,0.339,23,0.716,25,0.189,26,0.092,27,0.015,28,0.015,29,1.251,32,0.306,33,1.038,34,1.531,36,1.712,39,1.958,41,1.121,44,1.38,45,1.917,46,3.477,47,1.472,48,0.931,49,0.845,50,1.472,51,1.614,52,1.077,53,1.46,56,1.138,57,2.53,60,0.947,63,1.939,64,1.939,65,1.22,68,1.411,71,0.868,73,1.22,74,1.22,76,1.077,77,1.22,78,0.868,79,0.963,80,3.001,81,3.35,83,1.411,84,1.344,106,2.385,157,1.712,159,1.22,164,2.131,165,2.559,166,1.557,167,1.22,172,1.077,215,1.712,216,1.411,217,1.939,218,3.181,219,1.411,220,1.701,221,1.701,222,2.704,223,1.411,224,1.701,225,1.701,226,2.704,227,3.365,228,1.701,229,1.701,230,2.704,231,3.696,232,3.181,233,3.834,234,3.834,235,1.411,236,2.829,237,1.701,238,1.701,239,2.704,240,2.704,241,1.701,242,1.22,243,1.939,244,1.411,245,1.939,246,1.939,247,1.701,248,1.701,249,1.701,250,1.701,251,1.701,252,1.701,253,1.701,254,1.701,255,1.701]],["title/modules/ProjectsModule.html",[0,1.085,8,1.753]],["body/modules/ProjectsModule.html",[0,1.493,2,1.325,3,1.972,7,0.035,8,3.364,9,2.58,10,2.413,11,1.783,12,1.783,13,0.35,14,0.302,15,0.257,17,2.698,18,0.62,19,0.628,23,1.794,24,2.413,25,0.35,26,0.171,27,0.024,28,0.024,99,2.611,125,2.846,166,2.58,167,2.257,215,3.059,256,2.611,257,2.611,258,2.611,259,3.148,260,3.148,261,2.611,262,3.056,263,3.148]],["title/injectables/ProjectsService.html",[144,0.905,166,1.433]],["body/injectables/ProjectsService.html",[7,0.035,13,0.237,14,0.204,15,0.173,18,0.564,19,0.424,25,0.237,26,0.115,27,0.018,28,0.018,32,0.383,33,1.234,34,1.821,35,2.864,36,2.037,41,1.357,44,1.642,47,1.782,48,1.127,49,1.023,50,1.782,51,1.82,52,2.037,53,1.562,57,1.488,60,0.745,69,1.623,70,1.347,84,1.515,88,1.488,89,1.086,106,2.37,112,1.204,136,1.642,143,2.665,144,0.94,156,1.086,165,0.984,166,1.488,168,2.306,171,1.204,214,1.204,217,2.306,218,2.668,219,2.668,223,2.668,235,2.668,236,2.957,242,1.525,243,2.306,244,1.764,264,1.764,265,2.127,266,3.586,267,2.127,268,3.216,269,2.127,270,2.127,271,2.127,272,2.127,273,1.525,274,2.127,275,1.764,276,2.127,277,2.127,278,2.127,279,2.127,280,2.127,281,2.127,282,3.216,283,2.127,284,2.127,285,2.127]],["title/classes/SubmitQuestionnaireDto.html",[26,0.168,286,1.753]],["body/classes/SubmitQuestionnaireDto.html",[7,0.034,13,0.441,14,0.381,15,0.323,18,0.441,25,0.441,26,0.269,27,0.028,28,0.028,32,0.713,39,2.023,41,1.158,49,0.874,107,2.244,110,2.29,118,2.51,286,2.803,287,4.106,288,3.287,289,3.057,290,3.55,291,3.963,292,3.963,293,4.95,294,4.95]],["title/classes/UpdateProjectDto.html",[26,0.168,236,1.753]],["body/classes/UpdateProjectDto.html",[7,0.035,13,0.467,14,0.403,15,0.342,18,0.57,25,0.467,26,0.228,27,0.029,28,0.029,34,2.377,106,2.143,107,2.377,109,3.01,175,2.377,236,2.904,243,3.01,295,3.482,296,4.197,297,3.482,298,3.482,299,4.197]],["title/interfaces/User.html",[45,1.188,210,1.753]],["body/interfaces/User.html",[7,0.034,13,0.389,14,0.336,15,0.285,18,0.389,25,0.389,27,0.026,28,0.026,32,0.63,45,1.755,48,1.31,49,1.19,53,1.754,60,1.892,79,3.058,110,2.116,120,3.872,175,2.589,210,1.982,211,2.511,213,4.224,214,1.982,289,3.058,290,3.652,300,2.904]],["title/controllers/UsersController.html",[29,1.433,301,1.961]],["body/controllers/UsersController.html",[7,0.035,13,0.294,14,0.254,15,0.216,18,0.565,19,0.528,23,1.114,25,0.294,26,0.144,27,0.021,28,0.021,29,1.747,32,0.476,33,1.449,39,1.351,41,0.773,45,2.132,46,2.708,47,1.016,48,0.642,49,0.583,50,1.016,51,1.114,53,1.287,56,1.114,57,2.617,63,2.708,64,1.898,65,1.898,69,1.409,71,1.351,73,1.898,74,1.898,76,1.676,77,1.898,78,1.351,79,1.499,80,3.158,81,2.708,84,0.927,130,2.138,133,1.676,146,1.898,172,1.676,231,3.983,232,3.132,245,1.898,246,1.898,286,3.202,289,2.138,301,2.391,302,2.195,303,3.132,304,2.195,305,2.646,306,2.646,307,3.776,308,3.776,309,2.195,310,2.195,311,2.646,312,2.646,313,2.646,314,2.646]],["title/modules/UsersModule.html",[0,1.085,9,1.433]],["body/modules/UsersModule.html",[0,1.465,2,1.289,3,1.935,7,0.035,9,2.704,10,2.368,11,1.734,12,1.734,13,0.34,14,0.294,15,0.25,17,2.648,18,0.615,19,0.611,23,1.76,24,2.368,25,0.34,26,0.166,27,0.023,28,0.023,69,1.925,105,2.998,125,2.822,130,2.368,133,1.939,146,2.196,245,2.196,246,2.196,261,2.539,301,3.015,315,2.539,316,2.539,317,3.061,318,2.539,319,3.061,320,3.061,321,2.998,322,3.061]],["title/injectables/UsersService.html",[69,0.991,144,0.905]],["body/injectables/UsersService.html",[7,0.035,13,0.226,14,0.195,15,0.166,18,0.534,19,0.406,25,0.226,26,0.11,27,0.017,28,0.017,32,0.366,33,1.193,34,1.76,35,2.927,36,1.968,37,2.577,38,2.577,41,1.402,44,1.038,45,1.448,47,1.747,48,1.104,49,1.003,50,1.747,51,1.916,52,1.968,53,1.542,57,2.106,60,0.712,62,1.458,67,1.686,69,0.995,84,1.595,88,0.941,89,1.038,136,1.586,143,2.628,144,0.908,145,1.686,168,1.458,171,1.151,214,1.151,217,3.029,242,1.458,266,3.503,273,1.458,275,1.686,286,2.827,289,1.151,303,2.577,304,2.577,309,1.686,310,1.686,323,1.686,324,3.107,325,2.033,326,2.033,327,3.107,328,2.033,329,2.033,330,2.033,331,3.107,332,2.033,333,2.033,334,2.033,335,2.033,336,2.033,337,3.107,338,3.107,339,2.033,340,2.033,341,2.033,342,2.033,343,2.033,344,1.686,345,2.033,346,2.033,347,2.033,348,2.033,349,2.033,350,3.107,351,2.033,352,3.107,353,2.033,354,2.033]],["title/coverage.html",[355,3.022]],["body/coverage.html",[7,0.035,15,0.186,26,0.243,27,0.019,28,0.019,29,1.872,30,1.445,31,1.893,38,1.293,44,1.165,45,1.302,49,0.503,66,1.637,69,0.731,71,1.165,95,1.293,106,1.165,108,1.893,109,2.432,119,1.893,127,1.637,129,2.562,130,1.293,132,1.893,133,1.445,134,2.562,144,1.309,157,1.445,158,2.432,159,1.637,164,1.445,165,1.569,166,1.056,172,1.445,173,1.893,177,1.893,210,1.92,212,1.893,215,1.445,216,1.893,236,1.293,262,1.637,264,1.893,286,1.293,287,1.893,288,1.893,295,1.893,300,1.893,301,1.445,302,1.893,321,1.637,323,1.893,355,1.637,356,2.283,357,2.283,358,2.283,359,2.283,360,2.283,361,6.11,362,5.755,363,4.478,364,1.893,365,5.544,366,1.893,367,2.283,368,1.893,369,4.045,370,2.813,371,2.813,372,1.893,373,2.283,374,2.283,375,1.893,376,2.283,377,1.893,378,1.893,379,2.283,380,2.283,381,1.893,382,1.893,383,1.893,384,2.813,385,1.893,386,2.283,387,2.283,388,1.893,389,2.283,390,2.283,391,2.283]],["title/dependencies.html",[3,1.722,392,2.15]],["body/dependencies.html",[3,1.65,7,0.035,19,0.711,26,0.251,27,0.026,28,0.026,98,2.257,104,2.556,118,2.257,186,3.838,188,2.957,189,2.957,190,2.957,214,2.019,297,2.957,298,2.957,393,3.565,394,3.565,395,5.137,396,3.565,397,3.565,398,3.565,399,3.565,400,3.565,401,3.565,402,3.565,403,3.565,404,3.565,405,3.565,406,3.565,407,3.565,408,3.565,409,3.565,410,3.565,411,3.565,412,3.565,413,3.565,414,3.565,415,3.565,416,3.565]],["title/miscellaneous/functions.html",[417,1.641,418,3.086]],["body/miscellaneous/functions.html",[7,0.031,27,0.031,28,0.031,32,0.836,366,3.855,368,4.798,417,2.943,418,3.855,419,4.647]],["title/index.html",[32,0.466,420,2.592,421,2.592]],["body/index.html",[7,0.034,14,0.279,15,0.237,27,0.023,28,0.023,56,1.222,165,1.343,344,2.407,355,2.081,422,2.902,423,2.902,424,4.03,425,2.902,426,2.902,427,2.902,428,2.902,429,2.902,430,2.407,431,2.407,432,2.407,433,2.407,434,2.902,435,4.629,436,2.902,437,2.902,438,2.902,439,2.902,440,5.578,441,2.902,442,2.902,443,2.902,444,2.902,445,2.902,446,2.902,447,2.902,448,2.902,449,2.902,450,2.902,451,2.902,452,2.902,453,2.902,454,2.902,455,5.439,456,2.902,457,2.902,458,4.03,459,2.902,460,2.902,461,2.902,462,2.902,463,4.03,464,4.03,465,2.902,466,2.902,467,2.902,468,4.03,469,4.03,470,2.902,471,2.902,472,2.902,473,2.902,474,2.407,475,2.902,476,2.902,477,2.902,478,2.902,479,2.902,480,2.902,481,2.902,482,2.902,483,2.902,484,2.902,485,2.407,486,2.902,487,2.902,488,2.902,489,2.902,490,2.902,491,2.902,492,2.407]],["title/modules.html",[2,1.774]],["body/modules.html",[1,2.672,2,1.777,6,2.39,7,0.029,8,2.39,9,1.953,27,0.029,28,0.029,125,2.154,474,4.794,493,5.779,494,5.779,495,5.925,496,4.22,497,4.22]],["title/overview.html",[498,3.495]],["body/overview.html",[1,3.661,2,1.309,3,1.956,4,2.58,5,2.58,6,3.218,7,0.034,8,3.319,9,2.743,10,2.393,11,1.761,12,1.761,23,1.309,27,0.024,28,0.024,69,1.819,92,2.58,94,2.58,95,2.718,107,1.761,125,2.629,131,1.97,166,2.221,171,1.761,198,2.58,211,2.231,256,2.58,257,2.58,258,2.58,315,2.58,316,2.58,318,2.58,498,2.58,499,4.226,500,4.226,501,3.11]],["title/properties.html",[110,1.722,392,2.15]],["body/properties.html",[7,0.034,27,0.03,28,0.03,56,1.878,76,2.825,110,2.064,430,3.7,431,3.7,432,3.7,433,3.7,485,3.7,492,3.7,502,4.461,503,4.461]],["title/miscellaneous/variables.html",[417,1.641,504,3.086]],["body/miscellaneous/variables.html",[7,0.036,27,0.017,28,0.017,32,0.666,44,1.549,45,1.722,48,0.737,49,1.256,53,1.588,56,0.83,60,0.691,84,0.691,88,1.404,111,1.414,112,1.116,120,1.414,127,2.176,140,1.248,143,1.006,148,1.248,156,2.774,262,2.176,273,2.176,289,1.116,290,1.414,321,2.176,364,1.635,370,1.635,371,3.447,372,2.517,375,1.635,377,1.635,378,3.069,381,1.635,382,3.069,383,1.635,384,1.635,385,2.517,388,1.635,417,1.248,504,1.635,505,3.035,506,3.035,507,1.971,508,1.971,509,1.971,510,1.971,511,1.971,512,1.971,513,5.339,514,5.339,515,3.7,516,1.971,517,1.971,518,3.7,519,3.7,520,1.971,521,3.035,522,1.971,523,1.971,524,4.487,525,3.035,526,1.971,527,4.156,528,1.971,529,3.035,530,1.971,531,3.035,532,1.971,533,1.971,534,1.971,535,1.971,536,3.035,537,1.971,538,1.971]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":502,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["1.1.19",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":501,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":499,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":500,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{},"overview.html":{}}}],["5.0.2",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["6.3.2",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["account",{"_index":133,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["algorithms",{"_index":208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["already",{"_index":337,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":475,"title":{},"body":{"index.html":{}}}],["answers",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{}}}],["api",{"_index":433,"title":{},"body":{"index.html":{},"properties.html":{}}}],["app",{"_index":453,"title":{},"body":{"index.html":{}}}],["applications",{"_index":429,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["audience",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":173,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["auth0_audience=running",{"_index":452,"title":{},"body":{"index.html":{}}}],["auth0_id",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth0_issuer_url",{"_index":451,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":30,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["authguard",{"_index":174,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":176,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":485,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":497,"title":{},"body":{"modules.html":{}}}],["await",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":432,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":476,"title":{},"body":{"index.html":{}}}],["body",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":495,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"modules.html":{}}}],["building",{"_index":425,"title":{},"body":{"index.html":{}}}],["cache",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["canactivate",{"_index":135,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["canactivate(context",{"_index":139,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["charge",{"_index":431,"title":{},"body":{"index.html":{},"properties.html":{}}}],["class",{"_index":26,"title":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_projectsmodule",{"_index":256,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_imports",{"_index":257,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_providers",{"_index":258,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":315,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":316,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":317,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":318,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('project",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":275,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["constants.databaseconnectionstring",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants.projectmodelstring",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants.usermodelstring",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":136,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["constructor(projectmodel",{"_index":265,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(usermodel",{"_index":325,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":137,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["context",{"_index":142,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":149,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["controller",{"_index":29,"title":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controllers",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["corresponding",{"_index":446,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":355,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":34,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{}}}],["create(createprojectdto",{"_index":219,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["create(createuserdto",{"_index":37,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["createdproject",{"_index":278,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createdproject.save",{"_index":280,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createduser",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprojectdto",{"_index":106,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["creates",{"_index":222,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["createuserdto",{"_index":38,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creator",{"_index":159,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{},"controllers/ProjectsController.html":{},"coverage.html":{}}}],["ctx",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":128,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database_connection",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnectionstring",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":125,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":127,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":39,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProjectsController.html":{},"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":41,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["developed",{"_index":434,"title":{},"body":{"index.html":{}}}],["development",{"_index":454,"title":{},"body":{"index.html":{}}}],["document",{"_index":213,"title":{},"body":{"interfaces/Project.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto/create",{"_index":242,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dto/submit",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":244,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["e2e",{"_index":465,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":426,"title":{},"body":{"index.html":{}}}],["email",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":448,"title":{},"body":{"index.html":{}}}],["error",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{}}}],["exception",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["executioncontext",{"_index":140,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":338,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":175,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":184,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":155,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["fetches",{"_index":230,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["fields",{"_index":240,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":217,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findall(@user('sub",{"_index":248,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findall(auth0_id",{"_index":223,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["findone",{"_index":36,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":251,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findone(@user('sub",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["findone(id",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findonebyauth0id",{"_index":324,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyauth0id(id",{"_index":331,"title":{},"body":{"injectables/UsersService.html":{}}}],["finds",{"_index":226,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["following",{"_index":444,"title":{},"body":{"index.html":{}}}],["framework",{"_index":424,"title":{},"body":{"index.html":{}}}],["function",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":418,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuse",{"_index":430,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(':id",{"_index":250,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getting",{"_index":420,"title":{"index.html":{}},"body":{}}],["given",{"_index":231,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["graph",{"_index":496,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":471,"title":{},"body":{"index.html":{}}}],["guard",{"_index":129,"title":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":131,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"overview.html":{}}}],["guards/is",{"_index":245,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["guards/jwt",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":482,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":489,"title":{},"body":{"index.html":{}}}],["id",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":147,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":273,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inject(constants.projectmodelstring",{"_index":277,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["inject(constants.usermodelstring",{"_index":335,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":144,"title":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":171,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":439,"title":{},"body":{"index.html":{}}}],["installenvironment",{"_index":441,"title":{},"body":{"index.html":{}}}],["instead",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["interface",{"_index":210,"title":{"interfaces/Project.html":{},"interfaces/User.html":{}},"body":{"interfaces/Project.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":211,"title":{},"body":{"interfaces/Project.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/project.interface",{"_index":274,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["interfaces/user.interface",{"_index":145,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"injectables/UsersService.html":{}}}],["internal",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["isaccountownerguard",{"_index":130,"title":{"guards/IsAccountOwnerGuard.html":{}},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["isaccountownerguard)@post('/questionnaire/:id",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{}}}],["iscreatorownerguard",{"_index":157,"title":{"guards/IsCreatorOwnerGuard.html":{}},"body":{"guards/IsCreatorOwnerGuard.html":{},"controllers/ProjectsController.html":{},"coverage.html":{}}}],["iscreatorownerguard)@post",{"_index":220,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isemail",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotemptyobject",{"_index":293,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isobject",{"_index":294,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isobject()@isnotemptyobject",{"_index":291,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isprojectownerguard",{"_index":164,"title":{"guards/IsProjectOwnerGuard.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"coverage.html":{}}}],["isprojectownerguard)@get(':id",{"_index":228,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@patch(':id",{"_index":237,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isstring",{"_index":113,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{}}}],["issuer",{"_index":206,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["join",{"_index":478,"title":{},"body":{"index.html":{}}}],["jwks",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwksrequestsperminute",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwksuri",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":71,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":486,"title":{},"body":{"index.html":{}}}],["keys",{"_index":445,"title":{},"body":{"index.html":{}}}],["known/jwks.json",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["license",{"_index":492,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":469,"title":{},"body":{"index.html":{}}}],["logouri",{"_index":111,"title":{},"body":{"classes/CreateProjectDto.html":{},"interfaces/Project.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["make",{"_index":442,"title":{},"body":{"index.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":417,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":468,"title":{},"body":{"index.html":{}}}],["mode",{"_index":458,"title":{},"body":{"index.html":{}}}],["model",{"_index":266,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo_uri",{"_index":450,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":214,"title":{},"body":{"interfaces/Project.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.connect(process.env.mongo_uri",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":481,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":487,"title":{},"body":{"index.html":{}}}],["name",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":435,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":491,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":297,"title":{},"body":{"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":423,"title":{},"body":{"index.html":{}}}],["npm",{"_index":440,"title":{},"body":{"index.html":{}}}],["object",{"_index":290,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":470,"title":{},"body":{"index.html":{}}}],["optional",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":498,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":234,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["owner.guard",{"_index":246,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["owner.guard.ts",{"_index":134,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"coverage.html":{}}}],["owner.guard.ts:5",{"_index":160,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["owner.guard.ts:6",{"_index":138,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["owner.guard.ts:8",{"_index":161,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["owner.guard.ts:9",{"_index":141,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["ownerid",{"_index":112,"title":{},"body":{"classes/CreateProjectDto.html":{},"guards/IsCreatorOwnerGuard.html":{},"interfaces/Project.html":{},"injectables/ProjectsService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":392,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":150,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["partialtype",{"_index":296,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createprojectdto",{"_index":299,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["passport",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportjwtsecret",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":183,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["patch",{"_index":241,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["patch(':id",{"_index":253,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["path",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":182,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":479,"title":{},"body":{"index.html":{}}}],["port",{"_index":449,"title":{},"body":{"index.html":{}}}],["post",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["post('/login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/questionnaire/:id",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":168,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["process.env.auth0_audience",{"_index":205,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url",{"_index":207,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url}.well",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["production",{"_index":460,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":422,"title":{},"body":{"index.html":{}}}],["project",{"_index":165,"title":{"interfaces/Project.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"coverage.html":{},"index.html":{}}}],["project.dto",{"_index":243,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":109,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["project.dto.ts:11",{"_index":114,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:14",{"_index":115,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:5",{"_index":117,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:8",{"_index":116,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project_model",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectmodel",{"_index":268,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projectmodelstring",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects",{"_index":227,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projects.constants",{"_index":276,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projects.controller",{"_index":260,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["projects.providers",{"_index":263,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["projects.service",{"_index":167,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["projects/projects.module",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["projectschema",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectscontroller",{"_index":215,"title":{"controllers/ProjectsController.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"coverage.html":{}}}],["projectsmodule",{"_index":8,"title":{"modules/ProjectsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["projectsproviders",{"_index":262,"title":{},"body":{"modules/ProjectsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectsservice",{"_index":166,"title":{"injectables/ProjectsService.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":143,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":110,"title":{"properties.html":{}},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Project.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["questionnaire",{"_index":289,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["questionnaire.dto",{"_index":310,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["questionnaire.dto.ts",{"_index":288,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"coverage.html":{}}}],["questionnaire.dto.ts:6",{"_index":292,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["ratelimit",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["read",{"_index":480,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{}}}],["ref",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":43,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":438,"title":{},"body":{"index.html":{}}}],["request",{"_index":148,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"miscellaneous/variables.html":{}}}],["request.body?.ownerid",{"_index":162,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["request.user",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.user?.sub",{"_index":151,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["requesting",{"_index":233,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["required",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["rs256",{"_index":209,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["rsa",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["run",{"_index":455,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":427,"title":{},"body":{"index.html":{}}}],["secretorkeyprovider",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["side",{"_index":428,"title":{},"body":{"index.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":473,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project.schema.ts",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../projects.constants.ts",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../projects.providers.ts",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.constants.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.providers.ts",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":31,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":42,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/guards/jwt",{"_index":172,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":177,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":179,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:27",{"_index":181,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/database.module",{"_index":261,"title":{},"body":{"modules/ProjectsModule.html":{},"modules/UsersModule.html":{}}}],["src/database.module.ts",{"_index":126,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database.providers.ts",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/projects/dto/create",{"_index":108,"title":{},"body":{"classes/CreateProjectDto.html":{},"coverage.html":{}}}],["src/projects/dto/update",{"_index":295,"title":{},"body":{"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["src/projects/guards/is",{"_index":158,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"coverage.html":{}}}],["src/projects/interfaces/project.interface.ts",{"_index":212,"title":{},"body":{"interfaces/Project.html":{},"coverage.html":{}}}],["src/projects/projects.constants.ts",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/projects/projects.controller.ts",{"_index":216,"title":{},"body":{"controllers/ProjectsController.html":{},"coverage.html":{}}}],["src/projects/projects.controller.ts:20",{"_index":221,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:29",{"_index":225,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:40",{"_index":229,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:52",{"_index":238,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.module.ts",{"_index":259,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["src/projects/projects.providers.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/projects/projects.service.ts",{"_index":264,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["src/projects/projects.service.ts:10",{"_index":267,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:17",{"_index":269,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:22",{"_index":271,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:26",{"_index":270,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:31",{"_index":272,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/schemas/project.schema.ts",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/submit",{"_index":287,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"coverage.html":{}}}],["src/users/guards/is",{"_index":132,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"coverage.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":300,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/user.decorator",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{}}}],["src/users/user.decorator.ts",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.constants.ts",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProjectsModule.html":{}}}],["src/users/users.module.ts",{"_index":319,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.providers.ts",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{}}}],["src/users/users.service.ts",{"_index":323,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:16",{"_index":328,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":329,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":330,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":332,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":333,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":326,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":456,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":459,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":461,"title":{},"body":{"index.html":{}}}],["started",{"_index":421,"title":{"index.html":{}},"body":{}}],["starter",{"_index":437,"title":{},"body":{"index.html":{}}}],["statements",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":483,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["submitquestionnaire",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnaire(@param(':id",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{}}}],["submitquestionnaire(id",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnairedto",{"_index":286,"title":{"classes/SubmitQuestionnaireDto.html":{}},"body":{"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["submitquestionnairedto.questionnaire",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["submits",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":474,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":443,"title":{},"body":{"index.html":{}}}],["svg",{"_index":494,"title":{},"body":{"modules.html":{}}}],["table",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":464,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":467,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":466,"title":{},"body":{"index.html":{}}}],["tests",{"_index":463,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":472,"title":{},"body":{"index.html":{}}}],["this.projectmodel(createprojectdto",{"_index":279,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.find",{"_index":284,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findbyid(id",{"_index":281,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findbyidandupdate(id",{"_index":285,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectsservice.create(createprojectdto",{"_index":247,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findall(auth0_id",{"_index":249,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(id",{"_index":252,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(params.id",{"_index":169,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["this.projectsservice.update(id",{"_index":255,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.usermodel(createuserdto",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(ownerid",{"_index":163,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["this.usersservice.findone(params.id",{"_index":153,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{}}}],["this.usersservice.findone(project?.ownerid",{"_index":170,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["this.usersservice.findonebyauth0id(auth0_id",{"_index":283,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.usersservice.findonebyauth0id(id",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.submitquestionnaire(id",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{}}}],["timestamps",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":336,"title":{},"body":{"injectables/UsersService.html":{}}}],["touch",{"_index":484,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":156,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectsService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":490,"title":{},"body":{"index.html":{}}}],["type",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":298,"title":{},"body":{"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":436,"title":{},"body":{"index.html":{}}}],["unique",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":462,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":503,"title":{},"body":{"properties.html":{}}}],["update",{"_index":218,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["update(@param('id",{"_index":254,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["update(id",{"_index":235,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["updateprojectdto",{"_index":236,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["updates",{"_index":239,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["usefactory",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":224,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["useguards(jwtauthguard)@post('/login",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@post('/register",{"_index":40,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":45,"title":{"interfaces/User.html":{}},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"controllers/ProjectsController.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user?.[data",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.id",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["user_model",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userbyid",{"_index":152,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["userbyid.auth0_id",{"_index":154,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["userid",{"_index":282,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["usermodel",{"_index":327,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodelstring",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.constants",{"_index":334,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":320,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.providers",{"_index":322,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":146,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":301,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":9,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":321,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":69,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":178,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":180,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":118,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"dependencies.html":{}}}],["value",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":447,"title":{},"body":{"index.html":{}}}],["variable",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":504,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifies",{"_index":232,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["version",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["watch",{"_index":457,"title":{},"body":{"index.html":{}}}],["website",{"_index":488,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":477,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ProjectsModule } from './projects/projects.module';\n\n@Module({\n  imports: [AuthModule, UsersModule, ProjectsModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n                    Registers a new user for the authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Logs in the authenticated user's auth0_id and returns the user id in our db\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { User } from 'src/users/user.decorator';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\n\n@Controller({ path: 'auth', version: '1' })\nexport class AuthController {\n    constructor(private readonly usersService: UsersService) { }\n\n    /**\n     * Registers a new user for the authenticated user\n     * @param createUserDto \n     */\n    @UseGuards(JwtAuthGuard)\n    @Post('/register')\n    create(@Body() createUserDto: CreateUserDto) {\n        return this.usersService.create(createUserDto);\n    }\n\n    /**\n     * \n     * @param id Logs in the authenticated user's auth0_id and returns the user id in our db\n     */\n    @UseGuards(JwtAuthGuard)\n    @Post('/login')\n    async findOne(@User('sub') id: string) {\n        const user = await this.usersService.findOneByAuth0Id(id);\n        return { id: user?.id };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtStrategy } from './jwt.strategy';\nimport { AuthController } from './auth.controller';\n\n@Module({\n    imports: [UsersModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n    providers: [JwtStrategy],\n    exports: [PassportModule],\n    controllers: [AuthController],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/create-project.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                logoUri\n                            \n                            \n                                name\n                            \n                            \n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoUri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/projects/dto/create-project.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateProjectDto {\n    @IsString()\n    ownerId: string;\n\n    @IsString()\n    name: string;\n\n    @IsString()\n    description: string;\n\n    @IsString()\n    logoUri: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth0_id\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth0_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsString()\n    name: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    auth0_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAccountOwnerGuard.html":{"url":"guards/IsAccountOwnerGuard.html","title":"guard - IsAccountOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAccountOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/guards/is-account-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/guards/is-account-owner.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/users/guards/is-account-owner.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { User } from '../interfaces/user.interface';\nimport { UsersService } from '../users.service';\n\n@Injectable()\nexport class IsAccountOwnerGuard implements CanActivate {\n  constructor(private usersService: UsersService) { }\n\n  async canActivate(\n    context: ExecutionContext,\n  ): Promise {\n\n    const request = context.switchToHttp().getRequest();\n    const { params }: { params: { id: string } } = request;\n    const auth0_id = request?.user?.sub;\n    const userById = await this.usersService.findOne(params.id);\n\n    if (!auth0_id || !userById || auth0_id !== userById.auth0_id) return false;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsCreatorOwnerGuard.html":{"url":"guards/IsCreatorOwnerGuard.html","title":"guard - IsCreatorOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsCreatorOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/projects/guards/is-creator-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/projects/guards/is-creator-owner.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/guards/is-creator-owner.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class IsCreatorOwnerGuard implements CanActivate {\n  constructor(private usersService: UsersService) { }\n\n  async canActivate(\n    context: ExecutionContext,\n  ): Promise {\n\n    const request = context.switchToHttp().getRequest();\n    const ownerId = request.body?.ownerId;\n    const auth0_id = request?.user?.sub;\n    const userById = await this.usersService.findOne(ownerId);\n\n    if (!auth0_id || !userById || auth0_id !== userById.auth0_id) return false;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsProjectOwnerGuard.html":{"url":"guards/IsProjectOwnerGuard.html","title":"guard - IsProjectOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsProjectOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/projects/guards/is-project-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, projectsService: ProjectsService)\n                    \n                \n                        \n                            \n                                Defined in src/projects/guards/is-project-owner.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectsService\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/guards/is-project-owner.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { ProjectsService } from '../projects.service';\n\n@Injectable()\nexport class IsProjectOwnerGuard implements CanActivate {\n  constructor(private usersService: UsersService, private projectsService: ProjectsService) { }\n\n  async canActivate(\n    context: ExecutionContext,\n  ): Promise {\n\n    const request = context.switchToHttp().getRequest();\n    const { params }: { params: { id: string } } = request;\n    const auth0_id = request?.user?.sub;\n    const project = await this.projectsService.findOne(params.id);\n    const userById = await this.usersService.findOne(project?.ownerId);\n\n    if (!auth0_id || !userById || auth0_id !== userById.auth0_id) return false;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { passportJwtSecret } from 'jwks-rsa';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            secretOrKeyProvider: passportJwtSecret({\n                cache: true,\n                rateLimit: true,\n                jwksRequestsPerMinute: 5,\n                jwksUri: `${process.env.AUTH0_ISSUER_URL}.well-known/jwks.json`,\n            }),\n\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            audience: process.env.AUTH0_AUDIENCE,\n            issuer: `${process.env.AUTH0_ISSUER_URL}`,\n            algorithms: ['RS256'],\n        });\n    }\n\n    validate(payload: unknown): unknown {\n        return payload;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/interfaces/project.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            logoUri\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface Project extends Document {\n    readonly ownerId: string;\n    readonly name: string;\n    readonly description: string;\n    readonly logoUri: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectsController.html":{"url":"controllers/ProjectsController.html","title":"controller - ProjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/projects.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProjectDto: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsCreatorOwnerGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:20\n                \n            \n\n\n            \n                \n                    Creates a new project for the authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(auth0_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:29\n                \n            \n\n\n            \n                \n                    Finds all the projects of the authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth0_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:40\n                \n            \n\n\n            \n                \n                    Fetches the project by the given id and verifies that the requesting\nauthenticated user is the owner of the project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:52\n                \n            \n\n\n            \n                \n                    Updates the project with the given id with the given fields for the update\nand verifies that the requesting authenticated user is the owner of the project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project ID\n\n                                    \n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { User } from 'src/users/user.decorator';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\nimport { IsCreatorOwnerGuard } from './guards/is-creator-owner.guard';\nimport { IsProjectOwnerGuard } from './guards/is-project-owner.guard';\nimport { ProjectsService } from './projects.service';\n\n@Controller({ path: 'projects', version: '1' })\nexport class ProjectsController {\n  constructor(private readonly projectsService: ProjectsService) { }\n\n  /**\n   * Creates a new project for the authenticated user\n   * @param createProjectDto \n   */\n  @UseGuards(JwtAuthGuard, IsCreatorOwnerGuard)\n  @Post()\n  create(@Body() createProjectDto: CreateProjectDto) {\n    return this.projectsService.create(createProjectDto);\n  }\n\n  /**\n   * Finds all the projects of the authenticated user\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll(@User('sub') auth0_id: string) {\n    return this.projectsService.findAll(auth0_id);\n  }\n\n  /**\n   * Fetches the project by the given id and verifies that the requesting \n   * authenticated user is the owner of the project \n   * @param id Project ID\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.projectsService.findOne(id);\n  }\n\n  /**\n   * Updates the project with the given id with the given fields for the update \n   * and verifies that the requesting authenticated user is the owner of the project \n   * @param id Project ID\n   * @param updateProjectDto \n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProjectDto: UpdateProjectDto) {\n    return this.projectsService.update(id, updateProjectDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsModule.html":{"url":"modules/ProjectsModule.html","title":"module - ProjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_imports\n\n\n\ncluster_ProjectsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nDatabaseModule->ProjectsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nProjectsModule -->\n\nUsersModule->ProjectsModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/projects/projects.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProjectsService } from './projects.service';\nimport { ProjectsController } from './projects.controller';\nimport { DatabaseModule } from 'src/database.module';\nimport { projectsProviders } from './projects.providers';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [UsersModule, DatabaseModule],\n  controllers: [ProjectsController],\n  providers: [\n    ProjectsService,\n    ...projectsProviders]\n})\nexport class ProjectsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectModel: Model, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/projects/projects.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createProjectDto: CreateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(auth0_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth0_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { UsersService } from 'src/users/users.service';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\nimport { Project } from './interfaces/project.interface';\nimport * as constants from './projects.constants';\n\n@Injectable()\nexport class ProjectsService {\n    constructor(\n        @Inject(constants.projectModelString)\n        private projectModel: Model,\n        private usersService: UsersService,\n    ) { }\n\n    async create(createProjectDto: CreateProjectDto): Promise {\n        const createdProject = new this.projectModel(createProjectDto);\n        return createdProject.save();\n    }\n\n    async findOne(id: string): Promise {\n        return this.projectModel.findById(id)\n    }\n\n    async findAll(auth0_id: string): Promise {\n        const userId = await this.usersService.findOneByAuth0Id(auth0_id);\n        return this.projectModel.find({ ownerId: userId });\n    }\n\n    async update(id: string, updateProjectDto: UpdateProjectDto): Promise {\n        return this.projectModel.findByIdAndUpdate(id, updateProjectDto, { new: true });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitQuestionnaireDto.html":{"url":"classes/SubmitQuestionnaireDto.html","title":"class - SubmitQuestionnaireDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitQuestionnaireDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/submit-questionnaire.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        questionnaire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/submit-questionnaire.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyObject, IsObject } from 'class-validator';\n\nexport class SubmitQuestionnaireDto {\n    @IsObject()\n    @IsNotEmptyObject()\n    questionnaire: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/update-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProjectDto } from './create-project.dto';\n\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth0_id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            questionnaire\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth0_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth0_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionnaire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionnaire:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n    readonly name: string;\n    readonly email: string;\n    readonly auth0_id: string;\n    readonly questionnaire: object;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitQuestionnaire\n                        \n                    \n                \n            \n            \n                \nsubmitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsAccountOwnerGuard)@Post('/questionnaire/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:19\n                \n            \n\n\n            \n                \n                    Submits questionnaire answers for the given user id and verifies that the authenticated\nuser has the given user id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User ID\n\n                                    \n                                \n                                \n                                    submitQuestionnaireDto\n                                    \n                                                SubmitQuestionnaireDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Param } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { SubmitQuestionnaireDto } from './dto/submit-questionnaire.dto';\nimport { IsAccountOwnerGuard } from './guards/is-account-owner.guard';\n\n@Controller({ path: 'users', version: '1' })\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  /**\n   * Submits questionnaire answers for the given user id and verifies that the authenticated \n   * user has the given user id\n   * @param id User ID\n   * @param submitQuestionnaireDto \n   */\n  @UseGuards(JwtAuthGuard, IsAccountOwnerGuard)\n  @Post('/questionnaire/:id')\n  submitQuestionnaire(@Param(':id') id: string, @Body() submitQuestionnaireDto: SubmitQuestionnaireDto) {\n    return this.usersService.submitQuestionnaire(id, submitQuestionnaireDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { DatabaseModule } from 'src/database.module';\nimport { usersProviders } from './users.providers';\nimport { IsAccountOwnerGuard } from './guards/is-account-owner.guard';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [\n    UsersService,\n    IsAccountOwnerGuard,\n    ...usersProviders\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByAuth0Id\n                            \n                            \n                                    Async\n                                submitQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByAuth0Id\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByAuth0Id(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitQuestionnaire\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    submitQuestionnaireDto\n                                    \n                                                SubmitQuestionnaireDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { SubmitQuestionnaireDto } from './dto/submit-questionnaire.dto';\nimport { User } from './interfaces/user.interface';\nimport * as constants from './users.constants';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(constants.userModelString)\n    private userModel: Model,\n  ) { }\n\n\n  async create(createUserDto: CreateUserDto): Promise {\n    //TODO: When a user already exists, throw a custom exception of user already exists instead of internal server error\n    const createdUser = new this.userModel(createUserDto);\n    return createdUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return this.userModel.findOne({ _id: id }).exec();\n  }\n\n  async findOneByAuth0Id(id: string): Promise {\n    return this.userModel.findOne({ auth0_id: id }).exec();\n  }\n\n  async submitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto) {\n    return await this.userModel.findByIdAndUpdate(id,\n      { questionnaire: submitQuestionnaireDto.questionnaire }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/dto/create-project.dto.ts\n            \n            class\n            CreateProjectDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/projects/dto/update-project.dto.ts\n            \n            class\n            UpdateProjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/guards/is-creator-owner.guard.ts\n            \n            guard\n            IsCreatorOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/projects/guards/is-project-owner.guard.ts\n            \n            guard\n            IsProjectOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/projects/interfaces/project.interface.ts\n            \n            interface\n            Project\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/projects/projects.constants.ts\n            \n            variable\n            databaseConnectionString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.constants.ts\n            \n            variable\n            projectModelString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.controller.ts\n            \n            controller\n            ProjectsController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/projects/projects.providers.ts\n            \n            variable\n            projectsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/projects/schemas/project.schema.ts\n            \n            variable\n            ProjectSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/submit-questionnaire.dto.ts\n            \n            class\n            SubmitQuestionnaireDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/guards/is-account-owner.guard.ts\n            \n            guard\n            IsAccountOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.constants.ts\n            \n            variable\n            databaseConnectionString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.constants.ts\n            \n            variable\n            userModelString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/users/users.providers.ts\n            \n            variable\n            usersProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.0\n        \n            helmet : ^5.0.2\n        \n            jwks-rsa : ^2.1.0\n        \n            mongoose : ^6.3.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nFuse Charge Backend API developed with Nest framework TypeScript starter repository.\nInstallation\n$ npm installEnvironment\nMake sure to have the following keys and corresponding values in the .env file\nPORT=\nMONGO_URI=\nAUTH0_ISSUER_URL=\nAUTH0_AUDIENCE=Running the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_imports\n\n\n\ncluster_ProjectsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProjectsModule -->\n\nUsersModule->ProjectsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nProjectsModule -->\n\nDatabaseModule->ProjectsModule\n\n\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Fuse Charge Backend API\n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseConnectionString   (src/.../projects.constants.ts)\n                        \n                        \n                            databaseConnectionString   (src/.../users.constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            projectModelString   (src/.../projects.constants.ts)\n                        \n                        \n                            ProjectSchema   (src/.../project.schema.ts)\n                        \n                        \n                            projectsProviders   (src/.../projects.providers.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            userModelString   (src/.../users.constants.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            usersProviders   (src/.../users.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/projects/projects.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConnectionString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATABASE_CONNECTION'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectModelString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PROJECT_MODEL'\n                    \n                \n\n\n        \n    \n\n    src/users/users.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConnectionString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATABASE_CONNECTION'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userModelString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_MODEL'\n                    \n                \n\n\n        \n    \n\n    src/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: 'DATABASE_CONNECTION',\n        useFactory: (): Promise =>\n            mongoose.connect(process.env.MONGO_URI),\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/projects/schemas/project.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProjectSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        ownerId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n        name: { type: String, required: true },\n        description: { type: String, required: true },\n        logoUri: { type: String },\n    },\n    {\n        timestamps: true\n    }\n)\n                    \n                \n\n\n        \n    \n\n    src/projects/projects.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        projectsProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: constants.projectModelString,\n        useFactory: (connection: Connection) => connection.model('Project', ProjectSchema),\n        inject: [constants.databaseConnectionString],\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/users/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        const user = request.user;\n\n        return data ? user?.[data] : user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        name: { type: String },\n        email: { type: String, required: true, unique: true, index: true },\n        auth0_id: { type: String, required: true, unique: true, index: true },\n        questionnaire: { type: Object },\n    },\n    {\n        timestamps: true\n    }\n)\n                    \n                \n\n\n        \n    \n\n    src/users/users.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: constants.userModelString,\n        useFactory: (connection: Connection) => connection.model('User', UserSchema),\n        inject: [constants.databaseConnectionString],\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

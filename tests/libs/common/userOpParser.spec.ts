
import { assert } from "chai"
import { UserOpParser } from "../../../apps/charge-smart-wallets-service/src/common/utils/user-op-parser"
import { UserOperationBuilder } from "userop"

export const NATIVE_TRANSFER_CALLDATA = '0xb61d27f60000000000000000000000005bbea139c1b1b32cf7b5c7fd1d1ff802de006117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000'
export const ERC20_CALLDATA = '0xb61d27f6000000000000000000000000b1232fd89d027e4b949ced570609e8ad0e18811e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000cc95e80da76bd41507b99d9b977dc3062bcf64300000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000'
export const APPROVE_TOKEN_CALLDATA = '0xb61d27f6000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044095ea7b30000000000000000000000005bbea139c1b1b32cf7b5c7fd1d1ff802de00611700000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000'
export const STAKE_NATIVE_TOKENS_CALLDATA = '0xb61d27f6000000000000000000000000a3dc222ec847aac61fb6910496295bf344ea46be000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000004d0e30db000000000000000000000000000000000000000000000000000000000'
export const UNSTAKE_NATIVE_TOKENS_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b1dd0b683d9a56525cc096fbf5eec6e60fe79871000000000000000000000000a3dc222ec847aac61fb6910496295bf344ea46be0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000a3dc222ec847aac61fb6910496295bf344ea46be0000000000000000000000000000000000000000000000000236b5f720d646b90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000242e1a7d4d0000000000000000000000000000000000000000000000000236b5f720d646b900000000000000000000000000000000000000000000000000000000'
export const ERC_20_STAKE_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000200000000000000000000000034ef2cc892a88415e9f02b91bfa9c91fc0be6bd400000000000000000000000097a6e78c9208c21afada67e7e61d7ad27688efd10000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b300000000000000000000000097a6e78c9208c21afada67e7e61d7ad27688efd10000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024a59f3e0c0000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000'
export const ERC_20_UNSTAKE_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b1dd0b683d9a56525cc096fbf5eec6e60fe7987100000000000000000000000097a6e78c9208c21afada67e7e61d7ad27688efd10000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b300000000000000000000000097a6e78c9208c21afada67e7e61d7ad27688efd10000000000000000000000000000000000000000000000000c7d713b49da000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002467dfd4c90000000000000000000000000000000000000000000000000c7d713b49da000000000000000000000000000000000000000000000000000000000000'
export const SWAP_EXACT_ETH_FOR_TOKENS_CALLDATA = '0xb61d27f6000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb5000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e47ff36ab500000000000000000000000000000000000000000000000000000000000000e900000000000000000000000000000000000000000000000000000000000000800000000000000000000000005bbea139c1b1b32cf7b5c7fd1d1ff802de0061170000000000000000000000000000000000000000000000000000000064edf90300000000000000000000000000000000000000000000000000000000000000020000000000000000000000000be9e53fd7edac9f859882afdda116645287c629000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec00000000000000000000000000000000000000000000000000000000'
export const SWAP_ETH_FOR_EXACT_TOKENS_CALLDATA = '0xb61d27f6000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb5000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e4fb3bdb41000000000000000000000000000000000000000000000000000e35fa931a00000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000df5ba6044f17ec46b1f00c580916843e25996db90000000000000000000000000000000000000000000000000000000065153b3c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000be9e53fd7edac9f859882afdda116645287c6290000000000000000000000006a5f6a8121592becd6747a38d67451b310f7f15600000000000000000000000000000000000000000000000000000000'
export const SWAP_EXACT_TOKENS_FOR_ETH_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000200000000000000000000000034ef2cc892a88415e9f02b91bfa9c91fc0be6bd4000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb50000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010418cbafe50000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000b6ab96da36aa000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000e65513fe95f52f4350d2184c2fd722c37e6fd9950000000000000000000000000000000000000000000000000000000065156338000000000000000000000000000000000000000000000000000000000000000200000000000000000000000034ef2cc892a88415e9f02b91bfa9c91fc0be6bd40000000000000000000000000be9e53fd7edac9f859882afdda116645287c62900000000000000000000000000000000000000000000000000000000'
export const SWAP_TOKENS_FOR_EXACT_ETH_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000200000000000000000000000034ef2cc892a88415e9f02b91bfa9c91fc0be6bd4000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb50000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001044a25d94a00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000026e096d03c0400000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000df5ba6044f17ec46b1f00c580916843e25996db9000000000000000000000000000000000000000000000000000000006515640e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000006a5f6a8121592becd6747a38d67451b310f7f1560000000000000000000000000be9e53fd7edac9f859882afdda116645287c62900000000000000000000000000000000000000000000000000000000'
export const SWAP_EXACT_TOKENS_TO_TOKENS_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb5000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012438ed17390000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000002bc51d6510171d00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000005bbea139c1b1b32cf7b5c7fd1d1ff802de0061170000000000000000000000000000000000000000000000000000000064f70a150000000000000000000000000000000000000000000000000000000000000003000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec0000000000000000000000000be9e53fd7edac9f859882afdda116645287c629000000000000000000000000588e24ded8f850b14bb2e62e9c50a7cd5ee13da900000000000000000000000000000000000000000000000000000000'
export const SWAP_TOKENS_TO_EXACT_TOKENS_CALLDATA = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000e3f85aad0c8dd7337427b9df5d0fb741d65eeeb500000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001248803dbee00000000000000000000000000000000000000000000000000071afd498d000000000000000000000000000000000000000000000000000000004dc044a1e0ee00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000df5ba6044f17ec46b1f00c580916843e25996db90000000000000000000000000000000000000000000000000000000065158b8000000000000000000000000000000000000000000000000000000000000000020000000000000000000000006a5f6a8121592becd6747a38d67451b310f7f1560000000000000000000000000be9e53fd7edac9f859882afdda116645287c62900000000000000000000000000000000000000000000000000000000'
export const BATCH_TRANSACTION_CALLDATA_ONLY_ERC20_TOKENS = '0x47e1da2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000e65513fe95f52f4350d2184c2fd722c37e6fd9950000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000e65513fe95f52f4350d2184c2fd722c37e6fd995000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000'
export const BATCH_TRANSACTION_CALLDATA = '0x47e1da2a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000495d133b938596c9984d462f007b676bdc57ecec000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000e65513fe95f52f4350d2184c2fd722c37e6fd9950000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000e65513fe95f52f4350d2184c2fd722c37e6fd9950000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000e65513fe95f52f4350d2184c2fd722c37e6fd995000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000'
export const TRANSFER_NFT_CALLDATA = '0xb61d27f600000000000000000000000032319834d90323127988e4e2dc7b2162d426290400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000006423b872dd0000000000000000000000005bbea139c1b1b32cf7b5c7fd1d1ff802de0061170000000000000000000000005bbea139c1b1b32cf7b5c7fd1d1ff802de006117000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000'



describe("UserOpParser Tests", () => {
    const parser = new UserOpParser()
    beforeEach(function () {

    })

    it("userOp native token transfer calldata", async () => {
        const res = await parser.parseCallData(NATIVE_TRANSFER_CALLDATA)
        assert.equal(res.calls[0].targetAddress, '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
        assert.equal(res.name, 'execute')
        assert.equal(res.targetFunctions[0].name, 'nativeTransfer')
    });


    it("userOp erc-20 transfer calldata", async () => {
        const res = await parser.parseCallData(ERC20_CALLDATA)
        assert.equal(res.calls[0].targetAddress, '0xb1232fD89d027e4B949cED570609e8aD0e18811e')
        assert.equal(res.name, 'execute')
        assert.equal(res.targetFunctions[0].name, 'transfer')
        assert.equal(res.targetFunctions[0].callData[0], '0xcc95E80DA76bd41507b99d9b977Dc3062bcf6430')

    });

    it("userOp erc-20 approve calldata", async () => {
        const res = await parser.parseCallData(APPROVE_TOKEN_CALLDATA)
        // console.log(res.targetFunctions[0].callData[0]);
        assert.equal(res.calls[0].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC')
        assert.equal(res.name, 'execute')
        assert.equal(res.targetFunctions[0].callData[0], '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
        assert.equal(res.targetFunctions[0].name, 'approve')
    });

    it("userOp native token stake calldata", async () => {
        const res = await parser.parseCallData(STAKE_NATIVE_TOKENS_CALLDATA)
        assert.equal(res.name, 'execute')
        assert.equal(res.targetFunctions[0].targetAddress, '0xa3dc222eC847Aac61FB6910496295bF344Ea46be')
        assert.equal(res.targetFunctions[0].name, 'deposit')

    });


    it("userOp native token UNstake calldata", async () => {
        const res = await parser.parseCallData(UNSTAKE_NATIVE_TOKENS_CALLDATA)
        assert.equal(res.name, 'executeBatch')
        assert.equal(res.targetFunctions[0].targetAddress, '0xb1DD0B683d9A56525cC096fbF5eec6E60FE79871')
        assert.equal(res.targetFunctions[0].name, 'approve')
        assert.equal(res.targetFunctions[0].callData[0], '0xa3dc222eC847Aac61FB6910496295bF344Ea46be')
        assert.equal(res.targetFunctions[1].targetAddress, '0xa3dc222eC847Aac61FB6910496295bF344Ea46be')
        assert.equal(res.targetFunctions[1].name, 'withdraw')
    });
    it("userOp ERC-20 token stake calldata", async () => {
        const res = await parser.parseCallData(ERC_20_STAKE_CALLDATA)
        assert.equal(res.name, 'executeBatch')
        assert.equal(res.targetFunctions[0].targetAddress, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')
        assert.equal(res.targetFunctions[0].name, 'approve')
        assert.equal(res.targetFunctions[1].targetAddress, '0x97a6e78c9208c21afaDa67e7E61d7ad27688eFd1')
        assert.equal(res.targetFunctions[1].name, 'enter')

    });
    it("userOp ERC-20 token UNstake calldata", async () => {
        const res = await parser.parseCallData(ERC_20_UNSTAKE_CALLDATA)
        assert.equal(res.name, 'executeBatch')
        assert.equal(res.targetFunctions[0].targetAddress, '0xb1DD0B683d9A56525cC096fbF5eec6E60FE79871')
        assert.equal(res.targetFunctions[0].name, 'approve')
        assert.equal(res.targetFunctions[1].targetAddress, '0x97a6e78c9208c21afaDa67e7E61d7ad27688eFd1')
        assert.equal(res.targetFunctions[1].name, 'leave')

    });


    it("userOp NFT token transfer calldata", async () => {
        const res = await parser.parseCallData(TRANSFER_NFT_CALLDATA)
        assert.equal(res.name, 'execute')
        assert.equal(res.calls[0].targetAddress, '0x32319834d90323127988E4e2DC7b2162d4262904')
        assert.equal(res.targetFunctions[0].name, 'transferFrom')
        assert.equal(res.targetFunctions[0].callData[0], '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
        assert.equal(res.targetFunctions[0].callData[1], '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
    });

    it("swapExactETHForTokens function calldata", async () => {
        const res = await parser.parseCallData(SWAP_EXACT_ETH_FOR_TOKENS_CALLDATA)
        assert.equal(res.name, 'execute')
        assert.equal(res.calls[0].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
        assert.equal(res.targetFunctions[0].name, 'swapExactETHForTokens')
        assert.equal(res.targetFunctions[0].callData[1][0], '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629')
        assert.equal(res.targetFunctions[0].callData[1][1], '0x495d133B938596C9984d462F007B676bDc57eCEC')
        assert.equal(res.targetFunctions[0].callData[2], '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
    });

    it("swapETHForExactTokens function calldata", async () => {
        const res = await parser.parseCallData(SWAP_ETH_FOR_EXACT_TOKENS_CALLDATA)
        assert.equal(res.name, 'execute')
        assert.equal(res.calls[0].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
        assert.equal(res.targetFunctions[0].name, 'swapETHForExactTokens')
        assert.equal(res.targetFunctions[0].callData[1][0], '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629')
        assert.equal(res.targetFunctions[0].callData[1][1], '0x6a5F6A8121592BeCd6747a38d67451B310F7f156')
        assert.equal(res.targetFunctions[0].callData[2], '0xdf5bA6044f17Ec46B1F00c580916843E25996db9')
    });
    it("swapTokensForExactEth function calldata", async () => {
        const res = await parser.parseCallData(SWAP_TOKENS_FOR_EXACT_ETH_CALLDATA)
        assert.equal(res.name, 'executeBatch')
        assert.equal(res.calls[0].targetAddress, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')
        assert.equal(res.calls[1].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
        assert.equal(res.targetFunctions[0].targetAddress, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')
        assert.equal(res.targetFunctions[1].name, 'swapTokensForExactETH')
        assert.equal(res.targetFunctions[1].callData[2][0], '0x6a5F6A8121592BeCd6747a38d67451B310F7f156') //BUSD
        assert.equal(res.targetFunctions[1].callData[2][1], '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629') //Goodollar
        assert.equal(res.targetFunctions[1].callData[3], '0xdf5bA6044f17Ec46B1F00c580916843E25996db9')
    });

    it("swapExactTokensForEth function calldata", async () => {
        const res = await parser.parseCallData(SWAP_EXACT_TOKENS_FOR_ETH_CALLDATA)
        assert.equal(res.name, 'executeBatch')
        assert.equal(res.calls[0].targetAddress, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')
        assert.equal(res.calls[1].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
        assert.equal(res.calls[1].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
        assert.equal(res.targetFunctions[0].targetAddress, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')
        assert.equal(res.targetFunctions[1].name, 'swapExactTokensForETH')
        assert.equal(res.targetFunctions[1].callData[2][0], '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4') //Volt
        assert.equal(res.targetFunctions[1].callData[2][1], '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629')  //Goodollar
        assert.equal(res.targetFunctions[1].callData[3], '0xE65513Fe95F52F4350D2184c2fD722c37e6Fd995')
    });

    it("swapExactTokensForTokens function calldata", async () => {
        const res = await parser.parseCallData(SWAP_EXACT_TOKENS_TO_TOKENS_CALLDATA)
        assert.equal(res.name, 'executeBatch')
        assert.equal(res.calls[0].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC')
        assert.equal(res.calls[1].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
        assert.equal(res.targetFunctions[0].name, 'approve')
        assert.equal(res.targetFunctions[0].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar Approve
        assert.equal(res.targetFunctions[1].name, 'swapExactTokensForTokens')
        assert.equal(res.targetFunctions[1].callData[2][0], '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar 
        assert.equal(res.targetFunctions[1].callData[2][1], '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629') //WFUSE
        assert.equal(res.targetFunctions[1].callData[2][2], '0x588e24DEd8f850b14BB2e62E9c50A7Cd5Ee13Da9') //TerraLuna
        assert.equal(res.targetFunctions[1].callData[3], '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
    });

    it('userOp ERC-20 only batch transaction calldata', async () => {
        const res = await parser.parseCallData(BATCH_TRANSACTION_CALLDATA_ONLY_ERC20_TOKENS)
        assert.equal(res.targetFunctions[0].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar 
        assert.equal(res.targetFunctions[0].callData[0], '0xE65513Fe95F52F4350D2184c2fD722c37e6Fd995')
        assert.equal(res.targetFunctions[0].name, 'transfer')

        assert.equal(res.targetFunctions[1].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar 
        assert.equal(res.targetFunctions[1].callData[0], '0xE65513Fe95F52F4350D2184c2fD722c37e6Fd995')
        assert.equal(res.targetFunctions[0].name, 'transfer')
    })
    it('userOp batch transaction with native and ERC-20 tranfers calldata', async () => {
        const res = await parser.parseCallData(BATCH_TRANSACTION_CALLDATA)
        assert.equal(res.targetFunctions[0].targetAddress, '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE') //Goodollar 
        assert.equal(res.targetFunctions[0].name, 'nativeTransfer')
        assert.equal(res.targetFunctions[1].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar 
        assert.equal(res.targetFunctions[1].callData[0], '0xE65513Fe95F52F4350D2184c2fD722c37e6Fd995')
        assert.equal(res.targetFunctions[1].name, 'transfer')
        assert.equal(res.targetFunctions[2].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar 
        assert.equal(res.targetFunctions[2].callData[0], '0xE65513Fe95F52F4350D2184c2fD722c37e6Fd995')
        assert.equal(res.targetFunctions[2].name, 'transfer')
        assert.equal(res.targetFunctions[3].targetAddress, '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar 
        assert.equal(res.targetFunctions[3].callData[0], '0xE65513Fe95F52F4350D2184c2fD722c37e6Fd995')
        assert.equal(res.targetFunctions[3].name, 'transfer')
    })

    // it("swapTokensForExactTokens function calldata", async () => {
    //     const res = await parser.parseCallData(SWAP_TOKENS_TO_EXACT_TOKENS_CALLDATA)
    //     console.log(res);
    //     // assert.equal(res.name, 'execute')
    //     // assert.equal(res.calls[0].targetAddress, '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5')
    //     // assert.equal(targetFunction[1].name, 'swapTokensForExactTokens')
    //     // assert.equal(targetFunction[0].arguments[1][0], '0x495d133B938596C9984d462F007B676bDc57eCEC') //Goodollar
    //     // assert.equal(targetFunction[0].arguments.pop(), '0x588e24DEd8f850b14BB2e62E9c50A7Cd5Ee13Da9') //TerraLuna
    //     // assert.equal(targetFunction[1].arguments[2], '0x5BBEA139C1b1b32CF7b5C7fD1D1fF802De006117')
    // });


});
